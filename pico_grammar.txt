Pico Grammar

pico -> expression '.'
      | pico expression '.'

expression -> term
            | var '=' term ',' expression
            | IF term THEN term ',' ELSE expression

term -> literal
      | '(' expression ')'
      | invocation
      | term op term
      | unary_op term
      | term ( '(' term (',' term)* ')' )*

literal -> (typename)? var 
         | int_literal 
         | float_literal
         | string_literal
         | char_literal

op -> '+' | '-' | '*' | '/' | '%' | '>' | '<' | '&' | '|'
      | ">=" | "<=" | "==" | "!=" | "&&" | "||"

unary_op -> '-' | '!' | '~'

var ->            [a-z_][a-zA-Z_]*
typename ->       [A-Z][a-zA-Z_]*
int_literal ->    [0-9]+
float_literal ->  ([0-9]*\.[0-9]+)
string_literal->  \"(\\.|[^\\"])*\"
char_literal ->   \'(\\.|[^\\'])*\'