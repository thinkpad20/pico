Terminals unused in grammar

   FN
   CHAR
   ALG
   WHEN
   END
   RETURN
   IS
   DO
   IO
   IOFN
   SL
   SR
   BOOL
   SYMBOL
   INTEGER


Grammar

    0 $accept: pico $end

    1 pico: exprs

    2 exprs: expr '.'
    3      | pico expr '.'

    4 expr: term
    5     | var_name '=' term ',' expr
    6     | IF term THEN term ',' ELSE expr

    7 term: invocation
    8     | term '<' invocation
    9     | term '>' invocation
   10     | term LEQ invocation
   11     | term GEQ invocation
   12     | term EQ invocation
   13     | term NEQ invocation
   14     | term AND invocation
   15     | term OR invocation
   16     | term '+' invocation
   17     | term '-' invocation
   18     | term '*' invocation
   19     | term '/' invocation
   20     | term '%' invocation
   21     | term '^' invocation
   22     | NOT term
   23     | '-' term

   24 invocation: primary
   25           | invocation '(' term_list ')'

   26 term_list: opt_term
   27          | term_list ',' opt_term

   28 opt_term: term
   29         | /* empty */

   30 primary: literal
   31        | var
   32        | '(' expr ')'

   33 var: var_name
   34    | type_name var_name

   35 type_name: ANY
   36          | INT
   37          | FLOAT
   38          | STRING
   39          | ARRAY
   40          | LIST
   41          | TABLE
   42          | TYPENAME

   43 literal: INT_LITERAL
   44        | FLOAT_LITERAL
   45        | STRING_LITERAL
   46        | CHAR_LITERAL
   47        | TRUE
   48        | FALSE

   49 var_name: ID


Terminals, with rules where they appear

$end (0) 0
'%' (37) 20
'(' (40) 25 32
')' (41) 25 32
'*' (42) 18
'+' (43) 16
',' (44) 5 6 27
'-' (45) 17 23
'.' (46) 2 3
'/' (47) 19
'<' (60) 8
'=' (61) 5
'>' (62) 9
'^' (94) 21
error (256)
FN (258)
INT (259) 36
FLOAT (260) 37
CHAR (261)
STRING (262) 38
ARRAY (263) 39
TABLE (264) 41
ALG (265)
WHEN (266)
END (267)
IF (268) 6
THEN (269) 6
ANY (270) 35
RETURN (271)
IS (272)
DO (273)
IO (274)
IOFN (275)
LIST (276) 40
SL (277)
SR (278)
LEQ (279) 10
GEQ (280) 11
EQ (281) 12
NEQ (282) 13
OR (283) 15
AND (284) 14
NOT (285) 22
ELSE (286) 6
BOOL (287)
TRUE (288) 47
FALSE (289) 48
ID (290) 49
SYMBOL (291)
TYPENAME (292) 42
STRING_LITERAL (293) 45
FLOAT_LITERAL (294) 44
INT_LITERAL (295) 43
CHAR_LITERAL (296) 46
INTEGER (297)
UNARY (298)


Nonterminals, with rules where they appear

$accept (57)
    on left: 0
pico (58)
    on left: 1, on right: 0 3
exprs (59)
    on left: 2 3, on right: 1
expr (60)
    on left: 4 5 6, on right: 2 3 5 6 32
term (61)
    on left: 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23, on right:
    4 5 6 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 28
invocation (62)
    on left: 24 25, on right: 7 8 9 10 11 12 13 14 15 16 17 18 19 20
    21 25
term_list (63)
    on left: 26 27, on right: 25 27
opt_term (64)
    on left: 28 29, on right: 26 27
primary (65)
    on left: 30 31 32, on right: 24
var (66)
    on left: 33 34, on right: 31
type_name (67)
    on left: 35 36 37 38 39 40 41 42, on right: 34
literal (68)
    on left: 43 44 45 46 47 48, on right: 30
var_name (69)
    on left: 49, on right: 5 33 34


State 0

    0 $accept: . pico $end
    1 pico: . exprs
    2 exprs: . expr '.'
    3      | . pico expr '.'
    4 expr: . term
    5     | . var_name '=' term ',' expr
    6     | . IF term THEN term ',' ELSE expr
    7 term: . invocation
    8     | . term '<' invocation
    9     | . term '>' invocation
   10     | . term LEQ invocation
   11     | . term GEQ invocation
   12     | . term EQ invocation
   13     | . term NEQ invocation
   14     | . term AND invocation
   15     | . term OR invocation
   16     | . term '+' invocation
   17     | . term '-' invocation
   18     | . term '*' invocation
   19     | . term '/' invocation
   20     | . term '%' invocation
   21     | . term '^' invocation
   22     | . NOT term
   23     | . '-' term
   24 invocation: . primary
   25           | . invocation '(' term_list ')'
   30 primary: . literal
   31        | . var
   32        | . '(' expr ')'
   33 var: . var_name
   34    | . type_name var_name
   35 type_name: . ANY
   36          | . INT
   37          | . FLOAT
   38          | . STRING
   39          | . ARRAY
   40          | . LIST
   41          | . TABLE
   42          | . TYPENAME
   43 literal: . INT_LITERAL
   44        | . FLOAT_LITERAL
   45        | . STRING_LITERAL
   46        | . CHAR_LITERAL
   47        | . TRUE
   48        | . FALSE
   49 var_name: . ID

    INT             shift, and go to state 1
    FLOAT           shift, and go to state 2
    STRING          shift, and go to state 3
    ARRAY           shift, and go to state 4
    TABLE           shift, and go to state 5
    IF              shift, and go to state 6
    ANY             shift, and go to state 7
    LIST            shift, and go to state 8
    NOT             shift, and go to state 9
    TRUE            shift, and go to state 10
    FALSE           shift, and go to state 11
    ID              shift, and go to state 12
    TYPENAME        shift, and go to state 13
    STRING_LITERAL  shift, and go to state 14
    FLOAT_LITERAL   shift, and go to state 15
    INT_LITERAL     shift, and go to state 16
    CHAR_LITERAL    shift, and go to state 17
    '-'             shift, and go to state 18
    '('             shift, and go to state 19

    pico        go to state 20
    exprs       go to state 21
    expr        go to state 22
    term        go to state 23
    invocation  go to state 24
    primary     go to state 25
    var         go to state 26
    type_name   go to state 27
    literal     go to state 28
    var_name    go to state 29


State 1

   36 type_name: INT .

    $default  reduce using rule 36 (type_name)


State 2

   37 type_name: FLOAT .

    $default  reduce using rule 37 (type_name)


State 3

   38 type_name: STRING .

    $default  reduce using rule 38 (type_name)


State 4

   39 type_name: ARRAY .

    $default  reduce using rule 39 (type_name)


State 5

   41 type_name: TABLE .

    $default  reduce using rule 41 (type_name)


State 6

    6 expr: IF . term THEN term ',' ELSE expr
    7 term: . invocation
    8     | . term '<' invocation
    9     | . term '>' invocation
   10     | . term LEQ invocation
   11     | . term GEQ invocation
   12     | . term EQ invocation
   13     | . term NEQ invocation
   14     | . term AND invocation
   15     | . term OR invocation
   16     | . term '+' invocation
   17     | . term '-' invocation
   18     | . term '*' invocation
   19     | . term '/' invocation
   20     | . term '%' invocation
   21     | . term '^' invocation
   22     | . NOT term
   23     | . '-' term
   24 invocation: . primary
   25           | . invocation '(' term_list ')'
   30 primary: . literal
   31        | . var
   32        | . '(' expr ')'
   33 var: . var_name
   34    | . type_name var_name
   35 type_name: . ANY
   36          | . INT
   37          | . FLOAT
   38          | . STRING
   39          | . ARRAY
   40          | . LIST
   41          | . TABLE
   42          | . TYPENAME
   43 literal: . INT_LITERAL
   44        | . FLOAT_LITERAL
   45        | . STRING_LITERAL
   46        | . CHAR_LITERAL
   47        | . TRUE
   48        | . FALSE
   49 var_name: . ID

    INT             shift, and go to state 1
    FLOAT           shift, and go to state 2
    STRING          shift, and go to state 3
    ARRAY           shift, and go to state 4
    TABLE           shift, and go to state 5
    ANY             shift, and go to state 7
    LIST            shift, and go to state 8
    NOT             shift, and go to state 9
    TRUE            shift, and go to state 10
    FALSE           shift, and go to state 11
    ID              shift, and go to state 12
    TYPENAME        shift, and go to state 13
    STRING_LITERAL  shift, and go to state 14
    FLOAT_LITERAL   shift, and go to state 15
    INT_LITERAL     shift, and go to state 16
    CHAR_LITERAL    shift, and go to state 17
    '-'             shift, and go to state 18
    '('             shift, and go to state 19

    term        go to state 30
    invocation  go to state 24
    primary     go to state 25
    var         go to state 26
    type_name   go to state 27
    literal     go to state 28
    var_name    go to state 31


State 7

   35 type_name: ANY .

    $default  reduce using rule 35 (type_name)


State 8

   40 type_name: LIST .

    $default  reduce using rule 40 (type_name)


State 9

    7 term: . invocation
    8     | . term '<' invocation
    9     | . term '>' invocation
   10     | . term LEQ invocation
   11     | . term GEQ invocation
   12     | . term EQ invocation
   13     | . term NEQ invocation
   14     | . term AND invocation
   15     | . term OR invocation
   16     | . term '+' invocation
   17     | . term '-' invocation
   18     | . term '*' invocation
   19     | . term '/' invocation
   20     | . term '%' invocation
   21     | . term '^' invocation
   22     | . NOT term
   22     | NOT . term
   23     | . '-' term
   24 invocation: . primary
   25           | . invocation '(' term_list ')'
   30 primary: . literal
   31        | . var
   32        | . '(' expr ')'
   33 var: . var_name
   34    | . type_name var_name
   35 type_name: . ANY
   36          | . INT
   37          | . FLOAT
   38          | . STRING
   39          | . ARRAY
   40          | . LIST
   41          | . TABLE
   42          | . TYPENAME
   43 literal: . INT_LITERAL
   44        | . FLOAT_LITERAL
   45        | . STRING_LITERAL
   46        | . CHAR_LITERAL
   47        | . TRUE
   48        | . FALSE
   49 var_name: . ID

    INT             shift, and go to state 1
    FLOAT           shift, and go to state 2
    STRING          shift, and go to state 3
    ARRAY           shift, and go to state 4
    TABLE           shift, and go to state 5
    ANY             shift, and go to state 7
    LIST            shift, and go to state 8
    NOT             shift, and go to state 9
    TRUE            shift, and go to state 10
    FALSE           shift, and go to state 11
    ID              shift, and go to state 12
    TYPENAME        shift, and go to state 13
    STRING_LITERAL  shift, and go to state 14
    FLOAT_LITERAL   shift, and go to state 15
    INT_LITERAL     shift, and go to state 16
    CHAR_LITERAL    shift, and go to state 17
    '-'             shift, and go to state 18
    '('             shift, and go to state 19

    term        go to state 32
    invocation  go to state 24
    primary     go to state 25
    var         go to state 26
    type_name   go to state 27
    literal     go to state 28
    var_name    go to state 31


State 10

   47 literal: TRUE .

    $default  reduce using rule 47 (literal)


State 11

   48 literal: FALSE .

    $default  reduce using rule 48 (literal)


State 12

   49 var_name: ID .

    $default  reduce using rule 49 (var_name)


State 13

   42 type_name: TYPENAME .

    $default  reduce using rule 42 (type_name)


State 14

   45 literal: STRING_LITERAL .

    $default  reduce using rule 45 (literal)


State 15

   44 literal: FLOAT_LITERAL .

    $default  reduce using rule 44 (literal)


State 16

   43 literal: INT_LITERAL .

    $default  reduce using rule 43 (literal)


State 17

   46 literal: CHAR_LITERAL .

    $default  reduce using rule 46 (literal)


State 18

    7 term: . invocation
    8     | . term '<' invocation
    9     | . term '>' invocation
   10     | . term LEQ invocation
   11     | . term GEQ invocation
   12     | . term EQ invocation
   13     | . term NEQ invocation
   14     | . term AND invocation
   15     | . term OR invocation
   16     | . term '+' invocation
   17     | . term '-' invocation
   18     | . term '*' invocation
   19     | . term '/' invocation
   20     | . term '%' invocation
   21     | . term '^' invocation
   22     | . NOT term
   23     | . '-' term
   23     | '-' . term
   24 invocation: . primary
   25           | . invocation '(' term_list ')'
   30 primary: . literal
   31        | . var
   32        | . '(' expr ')'
   33 var: . var_name
   34    | . type_name var_name
   35 type_name: . ANY
   36          | . INT
   37          | . FLOAT
   38          | . STRING
   39          | . ARRAY
   40          | . LIST
   41          | . TABLE
   42          | . TYPENAME
   43 literal: . INT_LITERAL
   44        | . FLOAT_LITERAL
   45        | . STRING_LITERAL
   46        | . CHAR_LITERAL
   47        | . TRUE
   48        | . FALSE
   49 var_name: . ID

    INT             shift, and go to state 1
    FLOAT           shift, and go to state 2
    STRING          shift, and go to state 3
    ARRAY           shift, and go to state 4
    TABLE           shift, and go to state 5
    ANY             shift, and go to state 7
    LIST            shift, and go to state 8
    NOT             shift, and go to state 9
    TRUE            shift, and go to state 10
    FALSE           shift, and go to state 11
    ID              shift, and go to state 12
    TYPENAME        shift, and go to state 13
    STRING_LITERAL  shift, and go to state 14
    FLOAT_LITERAL   shift, and go to state 15
    INT_LITERAL     shift, and go to state 16
    CHAR_LITERAL    shift, and go to state 17
    '-'             shift, and go to state 18
    '('             shift, and go to state 19

    term        go to state 33
    invocation  go to state 24
    primary     go to state 25
    var         go to state 26
    type_name   go to state 27
    literal     go to state 28
    var_name    go to state 31


State 19

    4 expr: . term
    5     | . var_name '=' term ',' expr
    6     | . IF term THEN term ',' ELSE expr
    7 term: . invocation
    8     | . term '<' invocation
    9     | . term '>' invocation
   10     | . term LEQ invocation
   11     | . term GEQ invocation
   12     | . term EQ invocation
   13     | . term NEQ invocation
   14     | . term AND invocation
   15     | . term OR invocation
   16     | . term '+' invocation
   17     | . term '-' invocation
   18     | . term '*' invocation
   19     | . term '/' invocation
   20     | . term '%' invocation
   21     | . term '^' invocation
   22     | . NOT term
   23     | . '-' term
   24 invocation: . primary
   25           | . invocation '(' term_list ')'
   30 primary: . literal
   31        | . var
   32        | . '(' expr ')'
   32        | '(' . expr ')'
   33 var: . var_name
   34    | . type_name var_name
   35 type_name: . ANY
   36          | . INT
   37          | . FLOAT
   38          | . STRING
   39          | . ARRAY
   40          | . LIST
   41          | . TABLE
   42          | . TYPENAME
   43 literal: . INT_LITERAL
   44        | . FLOAT_LITERAL
   45        | . STRING_LITERAL
   46        | . CHAR_LITERAL
   47        | . TRUE
   48        | . FALSE
   49 var_name: . ID

    INT             shift, and go to state 1
    FLOAT           shift, and go to state 2
    STRING          shift, and go to state 3
    ARRAY           shift, and go to state 4
    TABLE           shift, and go to state 5
    IF              shift, and go to state 6
    ANY             shift, and go to state 7
    LIST            shift, and go to state 8
    NOT             shift, and go to state 9
    TRUE            shift, and go to state 10
    FALSE           shift, and go to state 11
    ID              shift, and go to state 12
    TYPENAME        shift, and go to state 13
    STRING_LITERAL  shift, and go to state 14
    FLOAT_LITERAL   shift, and go to state 15
    INT_LITERAL     shift, and go to state 16
    CHAR_LITERAL    shift, and go to state 17
    '-'             shift, and go to state 18
    '('             shift, and go to state 19

    expr        go to state 34
    term        go to state 23
    invocation  go to state 24
    primary     go to state 25
    var         go to state 26
    type_name   go to state 27
    literal     go to state 28
    var_name    go to state 29


State 20

    0 $accept: pico . $end
    3 exprs: pico . expr '.'
    4 expr: . term
    5     | . var_name '=' term ',' expr
    6     | . IF term THEN term ',' ELSE expr
    7 term: . invocation
    8     | . term '<' invocation
    9     | . term '>' invocation
   10     | . term LEQ invocation
   11     | . term GEQ invocation
   12     | . term EQ invocation
   13     | . term NEQ invocation
   14     | . term AND invocation
   15     | . term OR invocation
   16     | . term '+' invocation
   17     | . term '-' invocation
   18     | . term '*' invocation
   19     | . term '/' invocation
   20     | . term '%' invocation
   21     | . term '^' invocation
   22     | . NOT term
   23     | . '-' term
   24 invocation: . primary
   25           | . invocation '(' term_list ')'
   30 primary: . literal
   31        | . var
   32        | . '(' expr ')'
   33 var: . var_name
   34    | . type_name var_name
   35 type_name: . ANY
   36          | . INT
   37          | . FLOAT
   38          | . STRING
   39          | . ARRAY
   40          | . LIST
   41          | . TABLE
   42          | . TYPENAME
   43 literal: . INT_LITERAL
   44        | . FLOAT_LITERAL
   45        | . STRING_LITERAL
   46        | . CHAR_LITERAL
   47        | . TRUE
   48        | . FALSE
   49 var_name: . ID

    $end            shift, and go to state 35
    INT             shift, and go to state 1
    FLOAT           shift, and go to state 2
    STRING          shift, and go to state 3
    ARRAY           shift, and go to state 4
    TABLE           shift, and go to state 5
    IF              shift, and go to state 6
    ANY             shift, and go to state 7
    LIST            shift, and go to state 8
    NOT             shift, and go to state 9
    TRUE            shift, and go to state 10
    FALSE           shift, and go to state 11
    ID              shift, and go to state 12
    TYPENAME        shift, and go to state 13
    STRING_LITERAL  shift, and go to state 14
    FLOAT_LITERAL   shift, and go to state 15
    INT_LITERAL     shift, and go to state 16
    CHAR_LITERAL    shift, and go to state 17
    '-'             shift, and go to state 18
    '('             shift, and go to state 19

    expr        go to state 36
    term        go to state 23
    invocation  go to state 24
    primary     go to state 25
    var         go to state 26
    type_name   go to state 27
    literal     go to state 28
    var_name    go to state 29


State 21

    1 pico: exprs .

    $default  reduce using rule 1 (pico)


State 22

    2 exprs: expr . '.'

    '.'  shift, and go to state 37


State 23

    4 expr: term .  ['.', ')']
    8 term: term . '<' invocation
    9     | term . '>' invocation
   10     | term . LEQ invocation
   11     | term . GEQ invocation
   12     | term . EQ invocation
   13     | term . NEQ invocation
   14     | term . AND invocation
   15     | term . OR invocation
   16     | term . '+' invocation
   17     | term . '-' invocation
   18     | term . '*' invocation
   19     | term . '/' invocation
   20     | term . '%' invocation
   21     | term . '^' invocation

    LEQ  shift, and go to state 38
    GEQ  shift, and go to state 39
    EQ   shift, and go to state 40
    NEQ  shift, and go to state 41
    OR   shift, and go to state 42
    AND  shift, and go to state 43
    '<'  shift, and go to state 44
    '>'  shift, and go to state 45
    '+'  shift, and go to state 46
    '-'  shift, and go to state 47
    '*'  shift, and go to state 48
    '/'  shift, and go to state 49
    '%'  shift, and go to state 50
    '^'  shift, and go to state 51

    $default  reduce using rule 4 (expr)


State 24

    7 term: invocation .  [THEN, LEQ, GEQ, EQ, NEQ, OR, AND, '<', '>', '+', '-', '*', '/', '%', '^', '.', ',', ')']
   25 invocation: invocation . '(' term_list ')'

    '('  shift, and go to state 52

    $default  reduce using rule 7 (term)


State 25

   24 invocation: primary .

    $default  reduce using rule 24 (invocation)


State 26

   31 primary: var .

    $default  reduce using rule 31 (primary)


State 27

   34 var: type_name . var_name
   49 var_name: . ID

    ID  shift, and go to state 12

    var_name  go to state 53


State 28

   30 primary: literal .

    $default  reduce using rule 30 (primary)


State 29

    5 expr: var_name . '=' term ',' expr
   33 var: var_name .  [LEQ, GEQ, EQ, NEQ, OR, AND, '<', '>', '+', '-', '*', '/', '%', '^', '.', '(', ')']

    '='  shift, and go to state 54

    $default  reduce using rule 33 (var)


State 30

    6 expr: IF term . THEN term ',' ELSE expr
    8 term: term . '<' invocation
    9     | term . '>' invocation
   10     | term . LEQ invocation
   11     | term . GEQ invocation
   12     | term . EQ invocation
   13     | term . NEQ invocation
   14     | term . AND invocation
   15     | term . OR invocation
   16     | term . '+' invocation
   17     | term . '-' invocation
   18     | term . '*' invocation
   19     | term . '/' invocation
   20     | term . '%' invocation
   21     | term . '^' invocation

    THEN  shift, and go to state 55
    LEQ   shift, and go to state 38
    GEQ   shift, and go to state 39
    EQ    shift, and go to state 40
    NEQ   shift, and go to state 41
    OR    shift, and go to state 42
    AND   shift, and go to state 43
    '<'   shift, and go to state 44
    '>'   shift, and go to state 45
    '+'   shift, and go to state 46
    '-'   shift, and go to state 47
    '*'   shift, and go to state 48
    '/'   shift, and go to state 49
    '%'   shift, and go to state 50
    '^'   shift, and go to state 51


State 31

   33 var: var_name .

    $default  reduce using rule 33 (var)


State 32

    8 term: term . '<' invocation
    9     | term . '>' invocation
   10     | term . LEQ invocation
   11     | term . GEQ invocation
   12     | term . EQ invocation
   13     | term . NEQ invocation
   14     | term . AND invocation
   15     | term . OR invocation
   16     | term . '+' invocation
   17     | term . '-' invocation
   18     | term . '*' invocation
   19     | term . '/' invocation
   20     | term . '%' invocation
   21     | term . '^' invocation
   22     | NOT term .  [THEN, LEQ, GEQ, EQ, NEQ, OR, AND, '<', '>', '+', '-', '*', '/', '%', '^', '.', ',', ')']

    $default  reduce using rule 22 (term)

    Conflict between rule 22 and token LEQ resolved as reduce (LEQ < NOT).
    Conflict between rule 22 and token GEQ resolved as reduce (GEQ < NOT).
    Conflict between rule 22 and token EQ resolved as reduce (EQ < NOT).
    Conflict between rule 22 and token NEQ resolved as reduce (NEQ < NOT).
    Conflict between rule 22 and token OR resolved as reduce (OR < NOT).
    Conflict between rule 22 and token AND resolved as reduce (AND < NOT).
    Conflict between rule 22 and token '<' resolved as reduce ('<' < NOT).
    Conflict between rule 22 and token '>' resolved as reduce ('>' < NOT).
    Conflict between rule 22 and token '+' resolved as reduce ('+' < NOT).
    Conflict between rule 22 and token '-' resolved as reduce ('-' < NOT).
    Conflict between rule 22 and token '*' resolved as reduce ('*' < NOT).
    Conflict between rule 22 and token '/' resolved as reduce ('/' < NOT).
    Conflict between rule 22 and token '%' resolved as reduce ('%' < NOT).
    Conflict between rule 22 and token '^' resolved as reduce ('^' < NOT).


State 33

    8 term: term . '<' invocation
    9     | term . '>' invocation
   10     | term . LEQ invocation
   11     | term . GEQ invocation
   12     | term . EQ invocation
   13     | term . NEQ invocation
   14     | term . AND invocation
   15     | term . OR invocation
   16     | term . '+' invocation
   17     | term . '-' invocation
   18     | term . '*' invocation
   19     | term . '/' invocation
   20     | term . '%' invocation
   21     | term . '^' invocation
   23     | '-' term .  [THEN, LEQ, GEQ, EQ, NEQ, OR, AND, '<', '>', '+', '-', '*', '/', '%', '^', '.', ',', ')']

    $default  reduce using rule 23 (term)

    Conflict between rule 23 and token LEQ resolved as reduce (LEQ < UNARY).
    Conflict between rule 23 and token GEQ resolved as reduce (GEQ < UNARY).
    Conflict between rule 23 and token EQ resolved as reduce (EQ < UNARY).
    Conflict between rule 23 and token NEQ resolved as reduce (NEQ < UNARY).
    Conflict between rule 23 and token OR resolved as reduce (OR < UNARY).
    Conflict between rule 23 and token AND resolved as reduce (AND < UNARY).
    Conflict between rule 23 and token '<' resolved as reduce ('<' < UNARY).
    Conflict between rule 23 and token '>' resolved as reduce ('>' < UNARY).
    Conflict between rule 23 and token '+' resolved as reduce ('+' < UNARY).
    Conflict between rule 23 and token '-' resolved as reduce ('-' < UNARY).
    Conflict between rule 23 and token '*' resolved as reduce ('*' < UNARY).
    Conflict between rule 23 and token '/' resolved as reduce ('/' < UNARY).
    Conflict between rule 23 and token '%' resolved as reduce ('%' < UNARY).
    Conflict between rule 23 and token '^' resolved as reduce ('^' < UNARY).


State 34

   32 primary: '(' expr . ')'

    ')'  shift, and go to state 56


State 35

    0 $accept: pico $end .

    $default  accept


State 36

    3 exprs: pico expr . '.'

    '.'  shift, and go to state 57


State 37

    2 exprs: expr '.' .

    $default  reduce using rule 2 (exprs)


State 38

   10 term: term LEQ . invocation
   24 invocation: . primary
   25           | . invocation '(' term_list ')'
   30 primary: . literal
   31        | . var
   32        | . '(' expr ')'
   33 var: . var_name
   34    | . type_name var_name
   35 type_name: . ANY
   36          | . INT
   37          | . FLOAT
   38          | . STRING
   39          | . ARRAY
   40          | . LIST
   41          | . TABLE
   42          | . TYPENAME
   43 literal: . INT_LITERAL
   44        | . FLOAT_LITERAL
   45        | . STRING_LITERAL
   46        | . CHAR_LITERAL
   47        | . TRUE
   48        | . FALSE
   49 var_name: . ID

    INT             shift, and go to state 1
    FLOAT           shift, and go to state 2
    STRING          shift, and go to state 3
    ARRAY           shift, and go to state 4
    TABLE           shift, and go to state 5
    ANY             shift, and go to state 7
    LIST            shift, and go to state 8
    TRUE            shift, and go to state 10
    FALSE           shift, and go to state 11
    ID              shift, and go to state 12
    TYPENAME        shift, and go to state 13
    STRING_LITERAL  shift, and go to state 14
    FLOAT_LITERAL   shift, and go to state 15
    INT_LITERAL     shift, and go to state 16
    CHAR_LITERAL    shift, and go to state 17
    '('             shift, and go to state 19

    invocation  go to state 58
    primary     go to state 25
    var         go to state 26
    type_name   go to state 27
    literal     go to state 28
    var_name    go to state 31


State 39

   11 term: term GEQ . invocation
   24 invocation: . primary
   25           | . invocation '(' term_list ')'
   30 primary: . literal
   31        | . var
   32        | . '(' expr ')'
   33 var: . var_name
   34    | . type_name var_name
   35 type_name: . ANY
   36          | . INT
   37          | . FLOAT
   38          | . STRING
   39          | . ARRAY
   40          | . LIST
   41          | . TABLE
   42          | . TYPENAME
   43 literal: . INT_LITERAL
   44        | . FLOAT_LITERAL
   45        | . STRING_LITERAL
   46        | . CHAR_LITERAL
   47        | . TRUE
   48        | . FALSE
   49 var_name: . ID

    INT             shift, and go to state 1
    FLOAT           shift, and go to state 2
    STRING          shift, and go to state 3
    ARRAY           shift, and go to state 4
    TABLE           shift, and go to state 5
    ANY             shift, and go to state 7
    LIST            shift, and go to state 8
    TRUE            shift, and go to state 10
    FALSE           shift, and go to state 11
    ID              shift, and go to state 12
    TYPENAME        shift, and go to state 13
    STRING_LITERAL  shift, and go to state 14
    FLOAT_LITERAL   shift, and go to state 15
    INT_LITERAL     shift, and go to state 16
    CHAR_LITERAL    shift, and go to state 17
    '('             shift, and go to state 19

    invocation  go to state 59
    primary     go to state 25
    var         go to state 26
    type_name   go to state 27
    literal     go to state 28
    var_name    go to state 31


State 40

   12 term: term EQ . invocation
   24 invocation: . primary
   25           | . invocation '(' term_list ')'
   30 primary: . literal
   31        | . var
   32        | . '(' expr ')'
   33 var: . var_name
   34    | . type_name var_name
   35 type_name: . ANY
   36          | . INT
   37          | . FLOAT
   38          | . STRING
   39          | . ARRAY
   40          | . LIST
   41          | . TABLE
   42          | . TYPENAME
   43 literal: . INT_LITERAL
   44        | . FLOAT_LITERAL
   45        | . STRING_LITERAL
   46        | . CHAR_LITERAL
   47        | . TRUE
   48        | . FALSE
   49 var_name: . ID

    INT             shift, and go to state 1
    FLOAT           shift, and go to state 2
    STRING          shift, and go to state 3
    ARRAY           shift, and go to state 4
    TABLE           shift, and go to state 5
    ANY             shift, and go to state 7
    LIST            shift, and go to state 8
    TRUE            shift, and go to state 10
    FALSE           shift, and go to state 11
    ID              shift, and go to state 12
    TYPENAME        shift, and go to state 13
    STRING_LITERAL  shift, and go to state 14
    FLOAT_LITERAL   shift, and go to state 15
    INT_LITERAL     shift, and go to state 16
    CHAR_LITERAL    shift, and go to state 17
    '('             shift, and go to state 19

    invocation  go to state 60
    primary     go to state 25
    var         go to state 26
    type_name   go to state 27
    literal     go to state 28
    var_name    go to state 31


State 41

   13 term: term NEQ . invocation
   24 invocation: . primary
   25           | . invocation '(' term_list ')'
   30 primary: . literal
   31        | . var
   32        | . '(' expr ')'
   33 var: . var_name
   34    | . type_name var_name
   35 type_name: . ANY
   36          | . INT
   37          | . FLOAT
   38          | . STRING
   39          | . ARRAY
   40          | . LIST
   41          | . TABLE
   42          | . TYPENAME
   43 literal: . INT_LITERAL
   44        | . FLOAT_LITERAL
   45        | . STRING_LITERAL
   46        | . CHAR_LITERAL
   47        | . TRUE
   48        | . FALSE
   49 var_name: . ID

    INT             shift, and go to state 1
    FLOAT           shift, and go to state 2
    STRING          shift, and go to state 3
    ARRAY           shift, and go to state 4
    TABLE           shift, and go to state 5
    ANY             shift, and go to state 7
    LIST            shift, and go to state 8
    TRUE            shift, and go to state 10
    FALSE           shift, and go to state 11
    ID              shift, and go to state 12
    TYPENAME        shift, and go to state 13
    STRING_LITERAL  shift, and go to state 14
    FLOAT_LITERAL   shift, and go to state 15
    INT_LITERAL     shift, and go to state 16
    CHAR_LITERAL    shift, and go to state 17
    '('             shift, and go to state 19

    invocation  go to state 61
    primary     go to state 25
    var         go to state 26
    type_name   go to state 27
    literal     go to state 28
    var_name    go to state 31


State 42

   15 term: term OR . invocation
   24 invocation: . primary
   25           | . invocation '(' term_list ')'
   30 primary: . literal
   31        | . var
   32        | . '(' expr ')'
   33 var: . var_name
   34    | . type_name var_name
   35 type_name: . ANY
   36          | . INT
   37          | . FLOAT
   38          | . STRING
   39          | . ARRAY
   40          | . LIST
   41          | . TABLE
   42          | . TYPENAME
   43 literal: . INT_LITERAL
   44        | . FLOAT_LITERAL
   45        | . STRING_LITERAL
   46        | . CHAR_LITERAL
   47        | . TRUE
   48        | . FALSE
   49 var_name: . ID

    INT             shift, and go to state 1
    FLOAT           shift, and go to state 2
    STRING          shift, and go to state 3
    ARRAY           shift, and go to state 4
    TABLE           shift, and go to state 5
    ANY             shift, and go to state 7
    LIST            shift, and go to state 8
    TRUE            shift, and go to state 10
    FALSE           shift, and go to state 11
    ID              shift, and go to state 12
    TYPENAME        shift, and go to state 13
    STRING_LITERAL  shift, and go to state 14
    FLOAT_LITERAL   shift, and go to state 15
    INT_LITERAL     shift, and go to state 16
    CHAR_LITERAL    shift, and go to state 17
    '('             shift, and go to state 19

    invocation  go to state 62
    primary     go to state 25
    var         go to state 26
    type_name   go to state 27
    literal     go to state 28
    var_name    go to state 31


State 43

   14 term: term AND . invocation
   24 invocation: . primary
   25           | . invocation '(' term_list ')'
   30 primary: . literal
   31        | . var
   32        | . '(' expr ')'
   33 var: . var_name
   34    | . type_name var_name
   35 type_name: . ANY
   36          | . INT
   37          | . FLOAT
   38          | . STRING
   39          | . ARRAY
   40          | . LIST
   41          | . TABLE
   42          | . TYPENAME
   43 literal: . INT_LITERAL
   44        | . FLOAT_LITERAL
   45        | . STRING_LITERAL
   46        | . CHAR_LITERAL
   47        | . TRUE
   48        | . FALSE
   49 var_name: . ID

    INT             shift, and go to state 1
    FLOAT           shift, and go to state 2
    STRING          shift, and go to state 3
    ARRAY           shift, and go to state 4
    TABLE           shift, and go to state 5
    ANY             shift, and go to state 7
    LIST            shift, and go to state 8
    TRUE            shift, and go to state 10
    FALSE           shift, and go to state 11
    ID              shift, and go to state 12
    TYPENAME        shift, and go to state 13
    STRING_LITERAL  shift, and go to state 14
    FLOAT_LITERAL   shift, and go to state 15
    INT_LITERAL     shift, and go to state 16
    CHAR_LITERAL    shift, and go to state 17
    '('             shift, and go to state 19

    invocation  go to state 63
    primary     go to state 25
    var         go to state 26
    type_name   go to state 27
    literal     go to state 28
    var_name    go to state 31


State 44

    8 term: term '<' . invocation
   24 invocation: . primary
   25           | . invocation '(' term_list ')'
   30 primary: . literal
   31        | . var
   32        | . '(' expr ')'
   33 var: . var_name
   34    | . type_name var_name
   35 type_name: . ANY
   36          | . INT
   37          | . FLOAT
   38          | . STRING
   39          | . ARRAY
   40          | . LIST
   41          | . TABLE
   42          | . TYPENAME
   43 literal: . INT_LITERAL
   44        | . FLOAT_LITERAL
   45        | . STRING_LITERAL
   46        | . CHAR_LITERAL
   47        | . TRUE
   48        | . FALSE
   49 var_name: . ID

    INT             shift, and go to state 1
    FLOAT           shift, and go to state 2
    STRING          shift, and go to state 3
    ARRAY           shift, and go to state 4
    TABLE           shift, and go to state 5
    ANY             shift, and go to state 7
    LIST            shift, and go to state 8
    TRUE            shift, and go to state 10
    FALSE           shift, and go to state 11
    ID              shift, and go to state 12
    TYPENAME        shift, and go to state 13
    STRING_LITERAL  shift, and go to state 14
    FLOAT_LITERAL   shift, and go to state 15
    INT_LITERAL     shift, and go to state 16
    CHAR_LITERAL    shift, and go to state 17
    '('             shift, and go to state 19

    invocation  go to state 64
    primary     go to state 25
    var         go to state 26
    type_name   go to state 27
    literal     go to state 28
    var_name    go to state 31


State 45

    9 term: term '>' . invocation
   24 invocation: . primary
   25           | . invocation '(' term_list ')'
   30 primary: . literal
   31        | . var
   32        | . '(' expr ')'
   33 var: . var_name
   34    | . type_name var_name
   35 type_name: . ANY
   36          | . INT
   37          | . FLOAT
   38          | . STRING
   39          | . ARRAY
   40          | . LIST
   41          | . TABLE
   42          | . TYPENAME
   43 literal: . INT_LITERAL
   44        | . FLOAT_LITERAL
   45        | . STRING_LITERAL
   46        | . CHAR_LITERAL
   47        | . TRUE
   48        | . FALSE
   49 var_name: . ID

    INT             shift, and go to state 1
    FLOAT           shift, and go to state 2
    STRING          shift, and go to state 3
    ARRAY           shift, and go to state 4
    TABLE           shift, and go to state 5
    ANY             shift, and go to state 7
    LIST            shift, and go to state 8
    TRUE            shift, and go to state 10
    FALSE           shift, and go to state 11
    ID              shift, and go to state 12
    TYPENAME        shift, and go to state 13
    STRING_LITERAL  shift, and go to state 14
    FLOAT_LITERAL   shift, and go to state 15
    INT_LITERAL     shift, and go to state 16
    CHAR_LITERAL    shift, and go to state 17
    '('             shift, and go to state 19

    invocation  go to state 65
    primary     go to state 25
    var         go to state 26
    type_name   go to state 27
    literal     go to state 28
    var_name    go to state 31


State 46

   16 term: term '+' . invocation
   24 invocation: . primary
   25           | . invocation '(' term_list ')'
   30 primary: . literal
   31        | . var
   32        | . '(' expr ')'
   33 var: . var_name
   34    | . type_name var_name
   35 type_name: . ANY
   36          | . INT
   37          | . FLOAT
   38          | . STRING
   39          | . ARRAY
   40          | . LIST
   41          | . TABLE
   42          | . TYPENAME
   43 literal: . INT_LITERAL
   44        | . FLOAT_LITERAL
   45        | . STRING_LITERAL
   46        | . CHAR_LITERAL
   47        | . TRUE
   48        | . FALSE
   49 var_name: . ID

    INT             shift, and go to state 1
    FLOAT           shift, and go to state 2
    STRING          shift, and go to state 3
    ARRAY           shift, and go to state 4
    TABLE           shift, and go to state 5
    ANY             shift, and go to state 7
    LIST            shift, and go to state 8
    TRUE            shift, and go to state 10
    FALSE           shift, and go to state 11
    ID              shift, and go to state 12
    TYPENAME        shift, and go to state 13
    STRING_LITERAL  shift, and go to state 14
    FLOAT_LITERAL   shift, and go to state 15
    INT_LITERAL     shift, and go to state 16
    CHAR_LITERAL    shift, and go to state 17
    '('             shift, and go to state 19

    invocation  go to state 66
    primary     go to state 25
    var         go to state 26
    type_name   go to state 27
    literal     go to state 28
    var_name    go to state 31


State 47

   17 term: term '-' . invocation
   24 invocation: . primary
   25           | . invocation '(' term_list ')'
   30 primary: . literal
   31        | . var
   32        | . '(' expr ')'
   33 var: . var_name
   34    | . type_name var_name
   35 type_name: . ANY
   36          | . INT
   37          | . FLOAT
   38          | . STRING
   39          | . ARRAY
   40          | . LIST
   41          | . TABLE
   42          | . TYPENAME
   43 literal: . INT_LITERAL
   44        | . FLOAT_LITERAL
   45        | . STRING_LITERAL
   46        | . CHAR_LITERAL
   47        | . TRUE
   48        | . FALSE
   49 var_name: . ID

    INT             shift, and go to state 1
    FLOAT           shift, and go to state 2
    STRING          shift, and go to state 3
    ARRAY           shift, and go to state 4
    TABLE           shift, and go to state 5
    ANY             shift, and go to state 7
    LIST            shift, and go to state 8
    TRUE            shift, and go to state 10
    FALSE           shift, and go to state 11
    ID              shift, and go to state 12
    TYPENAME        shift, and go to state 13
    STRING_LITERAL  shift, and go to state 14
    FLOAT_LITERAL   shift, and go to state 15
    INT_LITERAL     shift, and go to state 16
    CHAR_LITERAL    shift, and go to state 17
    '('             shift, and go to state 19

    invocation  go to state 67
    primary     go to state 25
    var         go to state 26
    type_name   go to state 27
    literal     go to state 28
    var_name    go to state 31


State 48

   18 term: term '*' . invocation
   24 invocation: . primary
   25           | . invocation '(' term_list ')'
   30 primary: . literal
   31        | . var
   32        | . '(' expr ')'
   33 var: . var_name
   34    | . type_name var_name
   35 type_name: . ANY
   36          | . INT
   37          | . FLOAT
   38          | . STRING
   39          | . ARRAY
   40          | . LIST
   41          | . TABLE
   42          | . TYPENAME
   43 literal: . INT_LITERAL
   44        | . FLOAT_LITERAL
   45        | . STRING_LITERAL
   46        | . CHAR_LITERAL
   47        | . TRUE
   48        | . FALSE
   49 var_name: . ID

    INT             shift, and go to state 1
    FLOAT           shift, and go to state 2
    STRING          shift, and go to state 3
    ARRAY           shift, and go to state 4
    TABLE           shift, and go to state 5
    ANY             shift, and go to state 7
    LIST            shift, and go to state 8
    TRUE            shift, and go to state 10
    FALSE           shift, and go to state 11
    ID              shift, and go to state 12
    TYPENAME        shift, and go to state 13
    STRING_LITERAL  shift, and go to state 14
    FLOAT_LITERAL   shift, and go to state 15
    INT_LITERAL     shift, and go to state 16
    CHAR_LITERAL    shift, and go to state 17
    '('             shift, and go to state 19

    invocation  go to state 68
    primary     go to state 25
    var         go to state 26
    type_name   go to state 27
    literal     go to state 28
    var_name    go to state 31


State 49

   19 term: term '/' . invocation
   24 invocation: . primary
   25           | . invocation '(' term_list ')'
   30 primary: . literal
   31        | . var
   32        | . '(' expr ')'
   33 var: . var_name
   34    | . type_name var_name
   35 type_name: . ANY
   36          | . INT
   37          | . FLOAT
   38          | . STRING
   39          | . ARRAY
   40          | . LIST
   41          | . TABLE
   42          | . TYPENAME
   43 literal: . INT_LITERAL
   44        | . FLOAT_LITERAL
   45        | . STRING_LITERAL
   46        | . CHAR_LITERAL
   47        | . TRUE
   48        | . FALSE
   49 var_name: . ID

    INT             shift, and go to state 1
    FLOAT           shift, and go to state 2
    STRING          shift, and go to state 3
    ARRAY           shift, and go to state 4
    TABLE           shift, and go to state 5
    ANY             shift, and go to state 7
    LIST            shift, and go to state 8
    TRUE            shift, and go to state 10
    FALSE           shift, and go to state 11
    ID              shift, and go to state 12
    TYPENAME        shift, and go to state 13
    STRING_LITERAL  shift, and go to state 14
    FLOAT_LITERAL   shift, and go to state 15
    INT_LITERAL     shift, and go to state 16
    CHAR_LITERAL    shift, and go to state 17
    '('             shift, and go to state 19

    invocation  go to state 69
    primary     go to state 25
    var         go to state 26
    type_name   go to state 27
    literal     go to state 28
    var_name    go to state 31


State 50

   20 term: term '%' . invocation
   24 invocation: . primary
   25           | . invocation '(' term_list ')'
   30 primary: . literal
   31        | . var
   32        | . '(' expr ')'
   33 var: . var_name
   34    | . type_name var_name
   35 type_name: . ANY
   36          | . INT
   37          | . FLOAT
   38          | . STRING
   39          | . ARRAY
   40          | . LIST
   41          | . TABLE
   42          | . TYPENAME
   43 literal: . INT_LITERAL
   44        | . FLOAT_LITERAL
   45        | . STRING_LITERAL
   46        | . CHAR_LITERAL
   47        | . TRUE
   48        | . FALSE
   49 var_name: . ID

    INT             shift, and go to state 1
    FLOAT           shift, and go to state 2
    STRING          shift, and go to state 3
    ARRAY           shift, and go to state 4
    TABLE           shift, and go to state 5
    ANY             shift, and go to state 7
    LIST            shift, and go to state 8
    TRUE            shift, and go to state 10
    FALSE           shift, and go to state 11
    ID              shift, and go to state 12
    TYPENAME        shift, and go to state 13
    STRING_LITERAL  shift, and go to state 14
    FLOAT_LITERAL   shift, and go to state 15
    INT_LITERAL     shift, and go to state 16
    CHAR_LITERAL    shift, and go to state 17
    '('             shift, and go to state 19

    invocation  go to state 70
    primary     go to state 25
    var         go to state 26
    type_name   go to state 27
    literal     go to state 28
    var_name    go to state 31


State 51

   21 term: term '^' . invocation
   24 invocation: . primary
   25           | . invocation '(' term_list ')'
   30 primary: . literal
   31        | . var
   32        | . '(' expr ')'
   33 var: . var_name
   34    | . type_name var_name
   35 type_name: . ANY
   36          | . INT
   37          | . FLOAT
   38          | . STRING
   39          | . ARRAY
   40          | . LIST
   41          | . TABLE
   42          | . TYPENAME
   43 literal: . INT_LITERAL
   44        | . FLOAT_LITERAL
   45        | . STRING_LITERAL
   46        | . CHAR_LITERAL
   47        | . TRUE
   48        | . FALSE
   49 var_name: . ID

    INT             shift, and go to state 1
    FLOAT           shift, and go to state 2
    STRING          shift, and go to state 3
    ARRAY           shift, and go to state 4
    TABLE           shift, and go to state 5
    ANY             shift, and go to state 7
    LIST            shift, and go to state 8
    TRUE            shift, and go to state 10
    FALSE           shift, and go to state 11
    ID              shift, and go to state 12
    TYPENAME        shift, and go to state 13
    STRING_LITERAL  shift, and go to state 14
    FLOAT_LITERAL   shift, and go to state 15
    INT_LITERAL     shift, and go to state 16
    CHAR_LITERAL    shift, and go to state 17
    '('             shift, and go to state 19

    invocation  go to state 71
    primary     go to state 25
    var         go to state 26
    type_name   go to state 27
    literal     go to state 28
    var_name    go to state 31


State 52

    7 term: . invocation
    8     | . term '<' invocation
    9     | . term '>' invocation
   10     | . term LEQ invocation
   11     | . term GEQ invocation
   12     | . term EQ invocation
   13     | . term NEQ invocation
   14     | . term AND invocation
   15     | . term OR invocation
   16     | . term '+' invocation
   17     | . term '-' invocation
   18     | . term '*' invocation
   19     | . term '/' invocation
   20     | . term '%' invocation
   21     | . term '^' invocation
   22     | . NOT term
   23     | . '-' term
   24 invocation: . primary
   25           | . invocation '(' term_list ')'
   25           | invocation '(' . term_list ')'
   26 term_list: . opt_term
   27          | . term_list ',' opt_term
   28 opt_term: . term
   29         | .  [',', ')']
   30 primary: . literal
   31        | . var
   32        | . '(' expr ')'
   33 var: . var_name
   34    | . type_name var_name
   35 type_name: . ANY
   36          | . INT
   37          | . FLOAT
   38          | . STRING
   39          | . ARRAY
   40          | . LIST
   41          | . TABLE
   42          | . TYPENAME
   43 literal: . INT_LITERAL
   44        | . FLOAT_LITERAL
   45        | . STRING_LITERAL
   46        | . CHAR_LITERAL
   47        | . TRUE
   48        | . FALSE
   49 var_name: . ID

    INT             shift, and go to state 1
    FLOAT           shift, and go to state 2
    STRING          shift, and go to state 3
    ARRAY           shift, and go to state 4
    TABLE           shift, and go to state 5
    ANY             shift, and go to state 7
    LIST            shift, and go to state 8
    NOT             shift, and go to state 9
    TRUE            shift, and go to state 10
    FALSE           shift, and go to state 11
    ID              shift, and go to state 12
    TYPENAME        shift, and go to state 13
    STRING_LITERAL  shift, and go to state 14
    FLOAT_LITERAL   shift, and go to state 15
    INT_LITERAL     shift, and go to state 16
    CHAR_LITERAL    shift, and go to state 17
    '-'             shift, and go to state 18
    '('             shift, and go to state 19

    $default  reduce using rule 29 (opt_term)

    term        go to state 72
    invocation  go to state 24
    term_list   go to state 73
    opt_term    go to state 74
    primary     go to state 25
    var         go to state 26
    type_name   go to state 27
    literal     go to state 28
    var_name    go to state 31


State 53

   34 var: type_name var_name .

    $default  reduce using rule 34 (var)


State 54

    5 expr: var_name '=' . term ',' expr
    7 term: . invocation
    8     | . term '<' invocation
    9     | . term '>' invocation
   10     | . term LEQ invocation
   11     | . term GEQ invocation
   12     | . term EQ invocation
   13     | . term NEQ invocation
   14     | . term AND invocation
   15     | . term OR invocation
   16     | . term '+' invocation
   17     | . term '-' invocation
   18     | . term '*' invocation
   19     | . term '/' invocation
   20     | . term '%' invocation
   21     | . term '^' invocation
   22     | . NOT term
   23     | . '-' term
   24 invocation: . primary
   25           | . invocation '(' term_list ')'
   30 primary: . literal
   31        | . var
   32        | . '(' expr ')'
   33 var: . var_name
   34    | . type_name var_name
   35 type_name: . ANY
   36          | . INT
   37          | . FLOAT
   38          | . STRING
   39          | . ARRAY
   40          | . LIST
   41          | . TABLE
   42          | . TYPENAME
   43 literal: . INT_LITERAL
   44        | . FLOAT_LITERAL
   45        | . STRING_LITERAL
   46        | . CHAR_LITERAL
   47        | . TRUE
   48        | . FALSE
   49 var_name: . ID

    INT             shift, and go to state 1
    FLOAT           shift, and go to state 2
    STRING          shift, and go to state 3
    ARRAY           shift, and go to state 4
    TABLE           shift, and go to state 5
    ANY             shift, and go to state 7
    LIST            shift, and go to state 8
    NOT             shift, and go to state 9
    TRUE            shift, and go to state 10
    FALSE           shift, and go to state 11
    ID              shift, and go to state 12
    TYPENAME        shift, and go to state 13
    STRING_LITERAL  shift, and go to state 14
    FLOAT_LITERAL   shift, and go to state 15
    INT_LITERAL     shift, and go to state 16
    CHAR_LITERAL    shift, and go to state 17
    '-'             shift, and go to state 18
    '('             shift, and go to state 19

    term        go to state 75
    invocation  go to state 24
    primary     go to state 25
    var         go to state 26
    type_name   go to state 27
    literal     go to state 28
    var_name    go to state 31


State 55

    6 expr: IF term THEN . term ',' ELSE expr
    7 term: . invocation
    8     | . term '<' invocation
    9     | . term '>' invocation
   10     | . term LEQ invocation
   11     | . term GEQ invocation
   12     | . term EQ invocation
   13     | . term NEQ invocation
   14     | . term AND invocation
   15     | . term OR invocation
   16     | . term '+' invocation
   17     | . term '-' invocation
   18     | . term '*' invocation
   19     | . term '/' invocation
   20     | . term '%' invocation
   21     | . term '^' invocation
   22     | . NOT term
   23     | . '-' term
   24 invocation: . primary
   25           | . invocation '(' term_list ')'
   30 primary: . literal
   31        | . var
   32        | . '(' expr ')'
   33 var: . var_name
   34    | . type_name var_name
   35 type_name: . ANY
   36          | . INT
   37          | . FLOAT
   38          | . STRING
   39          | . ARRAY
   40          | . LIST
   41          | . TABLE
   42          | . TYPENAME
   43 literal: . INT_LITERAL
   44        | . FLOAT_LITERAL
   45        | . STRING_LITERAL
   46        | . CHAR_LITERAL
   47        | . TRUE
   48        | . FALSE
   49 var_name: . ID

    INT             shift, and go to state 1
    FLOAT           shift, and go to state 2
    STRING          shift, and go to state 3
    ARRAY           shift, and go to state 4
    TABLE           shift, and go to state 5
    ANY             shift, and go to state 7
    LIST            shift, and go to state 8
    NOT             shift, and go to state 9
    TRUE            shift, and go to state 10
    FALSE           shift, and go to state 11
    ID              shift, and go to state 12
    TYPENAME        shift, and go to state 13
    STRING_LITERAL  shift, and go to state 14
    FLOAT_LITERAL   shift, and go to state 15
    INT_LITERAL     shift, and go to state 16
    CHAR_LITERAL    shift, and go to state 17
    '-'             shift, and go to state 18
    '('             shift, and go to state 19

    term        go to state 76
    invocation  go to state 24
    primary     go to state 25
    var         go to state 26
    type_name   go to state 27
    literal     go to state 28
    var_name    go to state 31


State 56

   32 primary: '(' expr ')' .

    $default  reduce using rule 32 (primary)


State 57

    3 exprs: pico expr '.' .

    $default  reduce using rule 3 (exprs)


State 58

   10 term: term LEQ invocation .  [THEN, LEQ, GEQ, EQ, NEQ, OR, AND, '<', '>', '+', '-', '*', '/', '%', '^', '.', ',', ')']
   25 invocation: invocation . '(' term_list ')'

    '('  shift, and go to state 52

    $default  reduce using rule 10 (term)


State 59

   11 term: term GEQ invocation .  [THEN, LEQ, GEQ, EQ, NEQ, OR, AND, '<', '>', '+', '-', '*', '/', '%', '^', '.', ',', ')']
   25 invocation: invocation . '(' term_list ')'

    '('  shift, and go to state 52

    $default  reduce using rule 11 (term)


State 60

   12 term: term EQ invocation .  [THEN, LEQ, GEQ, EQ, NEQ, OR, AND, '<', '>', '+', '-', '*', '/', '%', '^', '.', ',', ')']
   25 invocation: invocation . '(' term_list ')'

    '('  shift, and go to state 52

    $default  reduce using rule 12 (term)


State 61

   13 term: term NEQ invocation .  [THEN, LEQ, GEQ, EQ, NEQ, OR, AND, '<', '>', '+', '-', '*', '/', '%', '^', '.', ',', ')']
   25 invocation: invocation . '(' term_list ')'

    '('  shift, and go to state 52

    $default  reduce using rule 13 (term)


State 62

   15 term: term OR invocation .  [THEN, LEQ, GEQ, EQ, NEQ, OR, AND, '<', '>', '+', '-', '*', '/', '%', '^', '.', ',', ')']
   25 invocation: invocation . '(' term_list ')'

    '('  shift, and go to state 52

    $default  reduce using rule 15 (term)


State 63

   14 term: term AND invocation .  [THEN, LEQ, GEQ, EQ, NEQ, OR, AND, '<', '>', '+', '-', '*', '/', '%', '^', '.', ',', ')']
   25 invocation: invocation . '(' term_list ')'

    '('  shift, and go to state 52

    $default  reduce using rule 14 (term)


State 64

    8 term: term '<' invocation .  [THEN, LEQ, GEQ, EQ, NEQ, OR, AND, '<', '>', '+', '-', '*', '/', '%', '^', '.', ',', ')']
   25 invocation: invocation . '(' term_list ')'

    '('  shift, and go to state 52

    $default  reduce using rule 8 (term)


State 65

    9 term: term '>' invocation .  [THEN, LEQ, GEQ, EQ, NEQ, OR, AND, '<', '>', '+', '-', '*', '/', '%', '^', '.', ',', ')']
   25 invocation: invocation . '(' term_list ')'

    '('  shift, and go to state 52

    $default  reduce using rule 9 (term)


State 66

   16 term: term '+' invocation .  [THEN, LEQ, GEQ, EQ, NEQ, OR, AND, '<', '>', '+', '-', '*', '/', '%', '^', '.', ',', ')']
   25 invocation: invocation . '(' term_list ')'

    '('  shift, and go to state 52

    $default  reduce using rule 16 (term)


State 67

   17 term: term '-' invocation .  [THEN, LEQ, GEQ, EQ, NEQ, OR, AND, '<', '>', '+', '-', '*', '/', '%', '^', '.', ',', ')']
   25 invocation: invocation . '(' term_list ')'

    '('  shift, and go to state 52

    $default  reduce using rule 17 (term)


State 68

   18 term: term '*' invocation .  [THEN, LEQ, GEQ, EQ, NEQ, OR, AND, '<', '>', '+', '-', '*', '/', '%', '^', '.', ',', ')']
   25 invocation: invocation . '(' term_list ')'

    '('  shift, and go to state 52

    $default  reduce using rule 18 (term)


State 69

   19 term: term '/' invocation .  [THEN, LEQ, GEQ, EQ, NEQ, OR, AND, '<', '>', '+', '-', '*', '/', '%', '^', '.', ',', ')']
   25 invocation: invocation . '(' term_list ')'

    '('  shift, and go to state 52

    $default  reduce using rule 19 (term)


State 70

   20 term: term '%' invocation .  [THEN, LEQ, GEQ, EQ, NEQ, OR, AND, '<', '>', '+', '-', '*', '/', '%', '^', '.', ',', ')']
   25 invocation: invocation . '(' term_list ')'

    '('  shift, and go to state 52

    $default  reduce using rule 20 (term)


State 71

   21 term: term '^' invocation .  [THEN, LEQ, GEQ, EQ, NEQ, OR, AND, '<', '>', '+', '-', '*', '/', '%', '^', '.', ',', ')']
   25 invocation: invocation . '(' term_list ')'

    '('  shift, and go to state 52

    $default  reduce using rule 21 (term)


State 72

    8 term: term . '<' invocation
    9     | term . '>' invocation
   10     | term . LEQ invocation
   11     | term . GEQ invocation
   12     | term . EQ invocation
   13     | term . NEQ invocation
   14     | term . AND invocation
   15     | term . OR invocation
   16     | term . '+' invocation
   17     | term . '-' invocation
   18     | term . '*' invocation
   19     | term . '/' invocation
   20     | term . '%' invocation
   21     | term . '^' invocation
   28 opt_term: term .  [',', ')']

    LEQ  shift, and go to state 38
    GEQ  shift, and go to state 39
    EQ   shift, and go to state 40
    NEQ  shift, and go to state 41
    OR   shift, and go to state 42
    AND  shift, and go to state 43
    '<'  shift, and go to state 44
    '>'  shift, and go to state 45
    '+'  shift, and go to state 46
    '-'  shift, and go to state 47
    '*'  shift, and go to state 48
    '/'  shift, and go to state 49
    '%'  shift, and go to state 50
    '^'  shift, and go to state 51

    $default  reduce using rule 28 (opt_term)


State 73

   25 invocation: invocation '(' term_list . ')'
   27 term_list: term_list . ',' opt_term

    ','  shift, and go to state 77
    ')'  shift, and go to state 78


State 74

   26 term_list: opt_term .

    $default  reduce using rule 26 (term_list)


State 75

    5 expr: var_name '=' term . ',' expr
    8 term: term . '<' invocation
    9     | term . '>' invocation
   10     | term . LEQ invocation
   11     | term . GEQ invocation
   12     | term . EQ invocation
   13     | term . NEQ invocation
   14     | term . AND invocation
   15     | term . OR invocation
   16     | term . '+' invocation
   17     | term . '-' invocation
   18     | term . '*' invocation
   19     | term . '/' invocation
   20     | term . '%' invocation
   21     | term . '^' invocation

    LEQ  shift, and go to state 38
    GEQ  shift, and go to state 39
    EQ   shift, and go to state 40
    NEQ  shift, and go to state 41
    OR   shift, and go to state 42
    AND  shift, and go to state 43
    '<'  shift, and go to state 44
    '>'  shift, and go to state 45
    '+'  shift, and go to state 46
    '-'  shift, and go to state 47
    '*'  shift, and go to state 48
    '/'  shift, and go to state 49
    '%'  shift, and go to state 50
    '^'  shift, and go to state 51
    ','  shift, and go to state 79


State 76

    6 expr: IF term THEN term . ',' ELSE expr
    8 term: term . '<' invocation
    9     | term . '>' invocation
   10     | term . LEQ invocation
   11     | term . GEQ invocation
   12     | term . EQ invocation
   13     | term . NEQ invocation
   14     | term . AND invocation
   15     | term . OR invocation
   16     | term . '+' invocation
   17     | term . '-' invocation
   18     | term . '*' invocation
   19     | term . '/' invocation
   20     | term . '%' invocation
   21     | term . '^' invocation

    LEQ  shift, and go to state 38
    GEQ  shift, and go to state 39
    EQ   shift, and go to state 40
    NEQ  shift, and go to state 41
    OR   shift, and go to state 42
    AND  shift, and go to state 43
    '<'  shift, and go to state 44
    '>'  shift, and go to state 45
    '+'  shift, and go to state 46
    '-'  shift, and go to state 47
    '*'  shift, and go to state 48
    '/'  shift, and go to state 49
    '%'  shift, and go to state 50
    '^'  shift, and go to state 51
    ','  shift, and go to state 80


State 77

    7 term: . invocation
    8     | . term '<' invocation
    9     | . term '>' invocation
   10     | . term LEQ invocation
   11     | . term GEQ invocation
   12     | . term EQ invocation
   13     | . term NEQ invocation
   14     | . term AND invocation
   15     | . term OR invocation
   16     | . term '+' invocation
   17     | . term '-' invocation
   18     | . term '*' invocation
   19     | . term '/' invocation
   20     | . term '%' invocation
   21     | . term '^' invocation
   22     | . NOT term
   23     | . '-' term
   24 invocation: . primary
   25           | . invocation '(' term_list ')'
   27 term_list: term_list ',' . opt_term
   28 opt_term: . term
   29         | .  [',', ')']
   30 primary: . literal
   31        | . var
   32        | . '(' expr ')'
   33 var: . var_name
   34    | . type_name var_name
   35 type_name: . ANY
   36          | . INT
   37          | . FLOAT
   38          | . STRING
   39          | . ARRAY
   40          | . LIST
   41          | . TABLE
   42          | . TYPENAME
   43 literal: . INT_LITERAL
   44        | . FLOAT_LITERAL
   45        | . STRING_LITERAL
   46        | . CHAR_LITERAL
   47        | . TRUE
   48        | . FALSE
   49 var_name: . ID

    INT             shift, and go to state 1
    FLOAT           shift, and go to state 2
    STRING          shift, and go to state 3
    ARRAY           shift, and go to state 4
    TABLE           shift, and go to state 5
    ANY             shift, and go to state 7
    LIST            shift, and go to state 8
    NOT             shift, and go to state 9
    TRUE            shift, and go to state 10
    FALSE           shift, and go to state 11
    ID              shift, and go to state 12
    TYPENAME        shift, and go to state 13
    STRING_LITERAL  shift, and go to state 14
    FLOAT_LITERAL   shift, and go to state 15
    INT_LITERAL     shift, and go to state 16
    CHAR_LITERAL    shift, and go to state 17
    '-'             shift, and go to state 18
    '('             shift, and go to state 19

    $default  reduce using rule 29 (opt_term)

    term        go to state 72
    invocation  go to state 24
    opt_term    go to state 81
    primary     go to state 25
    var         go to state 26
    type_name   go to state 27
    literal     go to state 28
    var_name    go to state 31


State 78

   25 invocation: invocation '(' term_list ')' .

    $default  reduce using rule 25 (invocation)


State 79

    4 expr: . term
    5     | . var_name '=' term ',' expr
    5     | var_name '=' term ',' . expr
    6     | . IF term THEN term ',' ELSE expr
    7 term: . invocation
    8     | . term '<' invocation
    9     | . term '>' invocation
   10     | . term LEQ invocation
   11     | . term GEQ invocation
   12     | . term EQ invocation
   13     | . term NEQ invocation
   14     | . term AND invocation
   15     | . term OR invocation
   16     | . term '+' invocation
   17     | . term '-' invocation
   18     | . term '*' invocation
   19     | . term '/' invocation
   20     | . term '%' invocation
   21     | . term '^' invocation
   22     | . NOT term
   23     | . '-' term
   24 invocation: . primary
   25           | . invocation '(' term_list ')'
   30 primary: . literal
   31        | . var
   32        | . '(' expr ')'
   33 var: . var_name
   34    | . type_name var_name
   35 type_name: . ANY
   36          | . INT
   37          | . FLOAT
   38          | . STRING
   39          | . ARRAY
   40          | . LIST
   41          | . TABLE
   42          | . TYPENAME
   43 literal: . INT_LITERAL
   44        | . FLOAT_LITERAL
   45        | . STRING_LITERAL
   46        | . CHAR_LITERAL
   47        | . TRUE
   48        | . FALSE
   49 var_name: . ID

    INT             shift, and go to state 1
    FLOAT           shift, and go to state 2
    STRING          shift, and go to state 3
    ARRAY           shift, and go to state 4
    TABLE           shift, and go to state 5
    IF              shift, and go to state 6
    ANY             shift, and go to state 7
    LIST            shift, and go to state 8
    NOT             shift, and go to state 9
    TRUE            shift, and go to state 10
    FALSE           shift, and go to state 11
    ID              shift, and go to state 12
    TYPENAME        shift, and go to state 13
    STRING_LITERAL  shift, and go to state 14
    FLOAT_LITERAL   shift, and go to state 15
    INT_LITERAL     shift, and go to state 16
    CHAR_LITERAL    shift, and go to state 17
    '-'             shift, and go to state 18
    '('             shift, and go to state 19

    expr        go to state 82
    term        go to state 23
    invocation  go to state 24
    primary     go to state 25
    var         go to state 26
    type_name   go to state 27
    literal     go to state 28
    var_name    go to state 29


State 80

    6 expr: IF term THEN term ',' . ELSE expr

    ELSE  shift, and go to state 83


State 81

   27 term_list: term_list ',' opt_term .

    $default  reduce using rule 27 (term_list)


State 82

    5 expr: var_name '=' term ',' expr .

    $default  reduce using rule 5 (expr)


State 83

    4 expr: . term
    5     | . var_name '=' term ',' expr
    6     | . IF term THEN term ',' ELSE expr
    6     | IF term THEN term ',' ELSE . expr
    7 term: . invocation
    8     | . term '<' invocation
    9     | . term '>' invocation
   10     | . term LEQ invocation
   11     | . term GEQ invocation
   12     | . term EQ invocation
   13     | . term NEQ invocation
   14     | . term AND invocation
   15     | . term OR invocation
   16     | . term '+' invocation
   17     | . term '-' invocation
   18     | . term '*' invocation
   19     | . term '/' invocation
   20     | . term '%' invocation
   21     | . term '^' invocation
   22     | . NOT term
   23     | . '-' term
   24 invocation: . primary
   25           | . invocation '(' term_list ')'
   30 primary: . literal
   31        | . var
   32        | . '(' expr ')'
   33 var: . var_name
   34    | . type_name var_name
   35 type_name: . ANY
   36          | . INT
   37          | . FLOAT
   38          | . STRING
   39          | . ARRAY
   40          | . LIST
   41          | . TABLE
   42          | . TYPENAME
   43 literal: . INT_LITERAL
   44        | . FLOAT_LITERAL
   45        | . STRING_LITERAL
   46        | . CHAR_LITERAL
   47        | . TRUE
   48        | . FALSE
   49 var_name: . ID

    INT             shift, and go to state 1
    FLOAT           shift, and go to state 2
    STRING          shift, and go to state 3
    ARRAY           shift, and go to state 4
    TABLE           shift, and go to state 5
    IF              shift, and go to state 6
    ANY             shift, and go to state 7
    LIST            shift, and go to state 8
    NOT             shift, and go to state 9
    TRUE            shift, and go to state 10
    FALSE           shift, and go to state 11
    ID              shift, and go to state 12
    TYPENAME        shift, and go to state 13
    STRING_LITERAL  shift, and go to state 14
    FLOAT_LITERAL   shift, and go to state 15
    INT_LITERAL     shift, and go to state 16
    CHAR_LITERAL    shift, and go to state 17
    '-'             shift, and go to state 18
    '('             shift, and go to state 19

    expr        go to state 84
    term        go to state 23
    invocation  go to state 24
    primary     go to state 25
    var         go to state 26
    type_name   go to state 27
    literal     go to state 28
    var_name    go to state 29


State 84

    6 expr: IF term THEN term ',' ELSE expr .

    $default  reduce using rule 6 (expr)
