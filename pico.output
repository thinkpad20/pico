Terminals unused in grammar

   FN
   CHAR
   ALG
   WHEN
   END
   RETURN
   IS
   DO
   IO
   IOFN
   SL
   SR
   BOOL
   TRUE
   FALSE
   SYMBOL
   INTEGER
   COMP
   LOGICAL
   ADDITIVE
   MULTI
   UNARY


Grammar

    0 $accept: exprs $end

    1 exprs: expr
    2      | exprs expr

    3 expr: term '.'
    4     | var '=' term term_end expr
    5     | IF term THEN term term_end ELSE expr

    6 term_end: NEWLINE
    7         | ','

    8 term: and_term
    9     | term OR and_term

   10 and_term: comp_term
   11         | and_term AND comp_term

   12 comp_term: add_term
   13          | comp_term comp add_term

   14 comp: EQ
   15     | '<'
   16     | '>'
   17     | LEQ
   18     | NEQ
   19     | GEQ

   20 add_term: mult_term
   21         | mult_term '+' add_term
   22         | mult_term '-' add_term

   23 mult_term: unary_term
   24          | unary_term '*' mult_term
   25          | unary_term '/' mult_term

   26 unary_term: invocation
   27           | '-' unary_term
   28           | NOT unary_term

   29 invocation: primary
   30           | invocation '(' term_list ')'

   31 term_list: opt_term
   32          | term_list ',' opt_term

   33 opt_term: term
   34         | /* empty */

   35 primary: literal
   36        | var
   37        | '(' expr ')'
   38        | undef_var

   39 undef_var: typename var

   40 typename: ANY
   41         | INT
   42         | FLOAT
   43         | STRING
   44         | ARRAY
   45         | LIST
   46         | TABLE
   47         | TYPENAME

   48 literal: INT_LITERAL
   49        | FLOAT_LITERAL
   50        | STRING_LITERAL
   51        | CHAR_LITERAL

   52 var: ID


Terminals, with rules where they appear

$end (0) 0
'(' (40) 30 37
')' (41) 30 37
'*' (42) 24
'+' (43) 21
',' (44) 7 32
'-' (45) 22 27
'.' (46) 3
'/' (47) 25
'<' (60) 15
'=' (61) 4
'>' (62) 16
error (256)
FN (258)
INT (259) 41
FLOAT (260) 42
CHAR (261)
STRING (262) 43
ARRAY (263) 44
TABLE (264) 46
ALG (265)
WHEN (266)
END (267)
IF (268) 5
THEN (269) 5
ANY (270) 40
RETURN (271)
IS (272)
DO (273)
IO (274)
IOFN (275)
LIST (276) 45
SL (277)
SR (278)
LEQ (279) 17
GEQ (280) 19
EQ (281) 14
NEQ (282) 18
OR (283) 9
AND (284) 11
NOT (285) 28
ELSE (286) 5
NEWLINE (287) 6
BOOL (288)
TRUE (289)
FALSE (290)
ID (291) 52
SYMBOL (292)
TYPENAME (293) 47
STRING_LITERAL (294) 50
FLOAT_LITERAL (295) 49
INT_LITERAL (296) 48
CHAR_LITERAL (297) 51
INTEGER (298)
COMP (299)
LOGICAL (300)
ADDITIVE (301)
MULTI (302)
UNARY (303)


Nonterminals, with rules where they appear

$accept (60)
    on left: 0
exprs (61)
    on left: 1 2, on right: 0 2
expr (62)
    on left: 3 4 5, on right: 1 2 4 5 37
term_end (63)
    on left: 6 7, on right: 4 5
term (64)
    on left: 8 9, on right: 3 4 5 9 33
and_term (65)
    on left: 10 11, on right: 8 9 11
comp_term (66)
    on left: 12 13, on right: 10 11 13
comp (67)
    on left: 14 15 16 17 18 19, on right: 13
add_term (68)
    on left: 20 21 22, on right: 12 13 21 22
mult_term (69)
    on left: 23 24 25, on right: 20 21 22 24 25
unary_term (70)
    on left: 26 27 28, on right: 23 24 25 27 28
invocation (71)
    on left: 29 30, on right: 26 30
term_list (72)
    on left: 31 32, on right: 30 32
opt_term (73)
    on left: 33 34, on right: 31 32
primary (74)
    on left: 35 36 37 38, on right: 29
undef_var (75)
    on left: 39, on right: 38
typename (76)
    on left: 40 41 42 43 44 45 46 47, on right: 39
literal (77)
    on left: 48 49 50 51, on right: 35
var (78)
    on left: 52, on right: 4 36 39


State 0

    0 $accept: . exprs $end
    1 exprs: . expr
    2      | . exprs expr
    3 expr: . term '.'
    4     | . var '=' term term_end expr
    5     | . IF term THEN term term_end ELSE expr
    8 term: . and_term
    9     | . term OR and_term
   10 and_term: . comp_term
   11         | . and_term AND comp_term
   12 comp_term: . add_term
   13          | . comp_term comp add_term
   20 add_term: . mult_term
   21         | . mult_term '+' add_term
   22         | . mult_term '-' add_term
   23 mult_term: . unary_term
   24          | . unary_term '*' mult_term
   25          | . unary_term '/' mult_term
   26 unary_term: . invocation
   27           | . '-' unary_term
   28           | . NOT unary_term
   29 invocation: . primary
   30           | . invocation '(' term_list ')'
   35 primary: . literal
   36        | . var
   37        | . '(' expr ')'
   38        | . undef_var
   39 undef_var: . typename var
   40 typename: . ANY
   41         | . INT
   42         | . FLOAT
   43         | . STRING
   44         | . ARRAY
   45         | . LIST
   46         | . TABLE
   47         | . TYPENAME
   48 literal: . INT_LITERAL
   49        | . FLOAT_LITERAL
   50        | . STRING_LITERAL
   51        | . CHAR_LITERAL
   52 var: . ID

    INT             shift, and go to state 1
    FLOAT           shift, and go to state 2
    STRING          shift, and go to state 3
    ARRAY           shift, and go to state 4
    TABLE           shift, and go to state 5
    IF              shift, and go to state 6
    ANY             shift, and go to state 7
    LIST            shift, and go to state 8
    NOT             shift, and go to state 9
    ID              shift, and go to state 10
    TYPENAME        shift, and go to state 11
    STRING_LITERAL  shift, and go to state 12
    FLOAT_LITERAL   shift, and go to state 13
    INT_LITERAL     shift, and go to state 14
    CHAR_LITERAL    shift, and go to state 15
    '-'             shift, and go to state 16
    '('             shift, and go to state 17

    exprs       go to state 18
    expr        go to state 19
    term        go to state 20
    and_term    go to state 21
    comp_term   go to state 22
    add_term    go to state 23
    mult_term   go to state 24
    unary_term  go to state 25
    invocation  go to state 26
    primary     go to state 27
    undef_var   go to state 28
    typename    go to state 29
    literal     go to state 30
    var         go to state 31


State 1

   41 typename: INT .

    $default  reduce using rule 41 (typename)


State 2

   42 typename: FLOAT .

    $default  reduce using rule 42 (typename)


State 3

   43 typename: STRING .

    $default  reduce using rule 43 (typename)


State 4

   44 typename: ARRAY .

    $default  reduce using rule 44 (typename)


State 5

   46 typename: TABLE .

    $default  reduce using rule 46 (typename)


State 6

    5 expr: IF . term THEN term term_end ELSE expr
    8 term: . and_term
    9     | . term OR and_term
   10 and_term: . comp_term
   11         | . and_term AND comp_term
   12 comp_term: . add_term
   13          | . comp_term comp add_term
   20 add_term: . mult_term
   21         | . mult_term '+' add_term
   22         | . mult_term '-' add_term
   23 mult_term: . unary_term
   24          | . unary_term '*' mult_term
   25          | . unary_term '/' mult_term
   26 unary_term: . invocation
   27           | . '-' unary_term
   28           | . NOT unary_term
   29 invocation: . primary
   30           | . invocation '(' term_list ')'
   35 primary: . literal
   36        | . var
   37        | . '(' expr ')'
   38        | . undef_var
   39 undef_var: . typename var
   40 typename: . ANY
   41         | . INT
   42         | . FLOAT
   43         | . STRING
   44         | . ARRAY
   45         | . LIST
   46         | . TABLE
   47         | . TYPENAME
   48 literal: . INT_LITERAL
   49        | . FLOAT_LITERAL
   50        | . STRING_LITERAL
   51        | . CHAR_LITERAL
   52 var: . ID

    INT             shift, and go to state 1
    FLOAT           shift, and go to state 2
    STRING          shift, and go to state 3
    ARRAY           shift, and go to state 4
    TABLE           shift, and go to state 5
    ANY             shift, and go to state 7
    LIST            shift, and go to state 8
    NOT             shift, and go to state 9
    ID              shift, and go to state 10
    TYPENAME        shift, and go to state 11
    STRING_LITERAL  shift, and go to state 12
    FLOAT_LITERAL   shift, and go to state 13
    INT_LITERAL     shift, and go to state 14
    CHAR_LITERAL    shift, and go to state 15
    '-'             shift, and go to state 16
    '('             shift, and go to state 17

    term        go to state 32
    and_term    go to state 21
    comp_term   go to state 22
    add_term    go to state 23
    mult_term   go to state 24
    unary_term  go to state 25
    invocation  go to state 26
    primary     go to state 27
    undef_var   go to state 28
    typename    go to state 29
    literal     go to state 30
    var         go to state 33


State 7

   40 typename: ANY .

    $default  reduce using rule 40 (typename)


State 8

   45 typename: LIST .

    $default  reduce using rule 45 (typename)


State 9

   26 unary_term: . invocation
   27           | . '-' unary_term
   28           | . NOT unary_term
   28           | NOT . unary_term
   29 invocation: . primary
   30           | . invocation '(' term_list ')'
   35 primary: . literal
   36        | . var
   37        | . '(' expr ')'
   38        | . undef_var
   39 undef_var: . typename var
   40 typename: . ANY
   41         | . INT
   42         | . FLOAT
   43         | . STRING
   44         | . ARRAY
   45         | . LIST
   46         | . TABLE
   47         | . TYPENAME
   48 literal: . INT_LITERAL
   49        | . FLOAT_LITERAL
   50        | . STRING_LITERAL
   51        | . CHAR_LITERAL
   52 var: . ID

    INT             shift, and go to state 1
    FLOAT           shift, and go to state 2
    STRING          shift, and go to state 3
    ARRAY           shift, and go to state 4
    TABLE           shift, and go to state 5
    ANY             shift, and go to state 7
    LIST            shift, and go to state 8
    NOT             shift, and go to state 9
    ID              shift, and go to state 10
    TYPENAME        shift, and go to state 11
    STRING_LITERAL  shift, and go to state 12
    FLOAT_LITERAL   shift, and go to state 13
    INT_LITERAL     shift, and go to state 14
    CHAR_LITERAL    shift, and go to state 15
    '-'             shift, and go to state 16
    '('             shift, and go to state 17

    unary_term  go to state 34
    invocation  go to state 26
    primary     go to state 27
    undef_var   go to state 28
    typename    go to state 29
    literal     go to state 30
    var         go to state 33


State 10

   52 var: ID .

    $default  reduce using rule 52 (var)


State 11

   47 typename: TYPENAME .

    $default  reduce using rule 47 (typename)


State 12

   50 literal: STRING_LITERAL .

    $default  reduce using rule 50 (literal)


State 13

   49 literal: FLOAT_LITERAL .

    $default  reduce using rule 49 (literal)


State 14

   48 literal: INT_LITERAL .

    $default  reduce using rule 48 (literal)


State 15

   51 literal: CHAR_LITERAL .

    $default  reduce using rule 51 (literal)


State 16

   26 unary_term: . invocation
   27           | . '-' unary_term
   27           | '-' . unary_term
   28           | . NOT unary_term
   29 invocation: . primary
   30           | . invocation '(' term_list ')'
   35 primary: . literal
   36        | . var
   37        | . '(' expr ')'
   38        | . undef_var
   39 undef_var: . typename var
   40 typename: . ANY
   41         | . INT
   42         | . FLOAT
   43         | . STRING
   44         | . ARRAY
   45         | . LIST
   46         | . TABLE
   47         | . TYPENAME
   48 literal: . INT_LITERAL
   49        | . FLOAT_LITERAL
   50        | . STRING_LITERAL
   51        | . CHAR_LITERAL
   52 var: . ID

    INT             shift, and go to state 1
    FLOAT           shift, and go to state 2
    STRING          shift, and go to state 3
    ARRAY           shift, and go to state 4
    TABLE           shift, and go to state 5
    ANY             shift, and go to state 7
    LIST            shift, and go to state 8
    NOT             shift, and go to state 9
    ID              shift, and go to state 10
    TYPENAME        shift, and go to state 11
    STRING_LITERAL  shift, and go to state 12
    FLOAT_LITERAL   shift, and go to state 13
    INT_LITERAL     shift, and go to state 14
    CHAR_LITERAL    shift, and go to state 15
    '-'             shift, and go to state 16
    '('             shift, and go to state 17

    unary_term  go to state 35
    invocation  go to state 26
    primary     go to state 27
    undef_var   go to state 28
    typename    go to state 29
    literal     go to state 30
    var         go to state 33


State 17

    3 expr: . term '.'
    4     | . var '=' term term_end expr
    5     | . IF term THEN term term_end ELSE expr
    8 term: . and_term
    9     | . term OR and_term
   10 and_term: . comp_term
   11         | . and_term AND comp_term
   12 comp_term: . add_term
   13          | . comp_term comp add_term
   20 add_term: . mult_term
   21         | . mult_term '+' add_term
   22         | . mult_term '-' add_term
   23 mult_term: . unary_term
   24          | . unary_term '*' mult_term
   25          | . unary_term '/' mult_term
   26 unary_term: . invocation
   27           | . '-' unary_term
   28           | . NOT unary_term
   29 invocation: . primary
   30           | . invocation '(' term_list ')'
   35 primary: . literal
   36        | . var
   37        | . '(' expr ')'
   37        | '(' . expr ')'
   38        | . undef_var
   39 undef_var: . typename var
   40 typename: . ANY
   41         | . INT
   42         | . FLOAT
   43         | . STRING
   44         | . ARRAY
   45         | . LIST
   46         | . TABLE
   47         | . TYPENAME
   48 literal: . INT_LITERAL
   49        | . FLOAT_LITERAL
   50        | . STRING_LITERAL
   51        | . CHAR_LITERAL
   52 var: . ID

    INT             shift, and go to state 1
    FLOAT           shift, and go to state 2
    STRING          shift, and go to state 3
    ARRAY           shift, and go to state 4
    TABLE           shift, and go to state 5
    IF              shift, and go to state 6
    ANY             shift, and go to state 7
    LIST            shift, and go to state 8
    NOT             shift, and go to state 9
    ID              shift, and go to state 10
    TYPENAME        shift, and go to state 11
    STRING_LITERAL  shift, and go to state 12
    FLOAT_LITERAL   shift, and go to state 13
    INT_LITERAL     shift, and go to state 14
    CHAR_LITERAL    shift, and go to state 15
    '-'             shift, and go to state 16
    '('             shift, and go to state 17

    expr        go to state 36
    term        go to state 20
    and_term    go to state 21
    comp_term   go to state 22
    add_term    go to state 23
    mult_term   go to state 24
    unary_term  go to state 25
    invocation  go to state 26
    primary     go to state 27
    undef_var   go to state 28
    typename    go to state 29
    literal     go to state 30
    var         go to state 31


State 18

    0 $accept: exprs . $end
    2 exprs: exprs . expr
    3 expr: . term '.'
    4     | . var '=' term term_end expr
    5     | . IF term THEN term term_end ELSE expr
    8 term: . and_term
    9     | . term OR and_term
   10 and_term: . comp_term
   11         | . and_term AND comp_term
   12 comp_term: . add_term
   13          | . comp_term comp add_term
   20 add_term: . mult_term
   21         | . mult_term '+' add_term
   22         | . mult_term '-' add_term
   23 mult_term: . unary_term
   24          | . unary_term '*' mult_term
   25          | . unary_term '/' mult_term
   26 unary_term: . invocation
   27           | . '-' unary_term
   28           | . NOT unary_term
   29 invocation: . primary
   30           | . invocation '(' term_list ')'
   35 primary: . literal
   36        | . var
   37        | . '(' expr ')'
   38        | . undef_var
   39 undef_var: . typename var
   40 typename: . ANY
   41         | . INT
   42         | . FLOAT
   43         | . STRING
   44         | . ARRAY
   45         | . LIST
   46         | . TABLE
   47         | . TYPENAME
   48 literal: . INT_LITERAL
   49        | . FLOAT_LITERAL
   50        | . STRING_LITERAL
   51        | . CHAR_LITERAL
   52 var: . ID

    $end            shift, and go to state 37
    INT             shift, and go to state 1
    FLOAT           shift, and go to state 2
    STRING          shift, and go to state 3
    ARRAY           shift, and go to state 4
    TABLE           shift, and go to state 5
    IF              shift, and go to state 6
    ANY             shift, and go to state 7
    LIST            shift, and go to state 8
    NOT             shift, and go to state 9
    ID              shift, and go to state 10
    TYPENAME        shift, and go to state 11
    STRING_LITERAL  shift, and go to state 12
    FLOAT_LITERAL   shift, and go to state 13
    INT_LITERAL     shift, and go to state 14
    CHAR_LITERAL    shift, and go to state 15
    '-'             shift, and go to state 16
    '('             shift, and go to state 17

    expr        go to state 38
    term        go to state 20
    and_term    go to state 21
    comp_term   go to state 22
    add_term    go to state 23
    mult_term   go to state 24
    unary_term  go to state 25
    invocation  go to state 26
    primary     go to state 27
    undef_var   go to state 28
    typename    go to state 29
    literal     go to state 30
    var         go to state 31


State 19

    1 exprs: expr .

    $default  reduce using rule 1 (exprs)


State 20

    3 expr: term . '.'
    9 term: term . OR and_term

    OR   shift, and go to state 39
    '.'  shift, and go to state 40


State 21

    8 term: and_term .  [THEN, OR, NEWLINE, '.', ',', ')']
   11 and_term: and_term . AND comp_term

    AND  shift, and go to state 41

    $default  reduce using rule 8 (term)


State 22

   10 and_term: comp_term .  [THEN, OR, AND, NEWLINE, '.', ',', ')']
   13 comp_term: comp_term . comp add_term
   14 comp: . EQ
   15     | . '<'
   16     | . '>'
   17     | . LEQ
   18     | . NEQ
   19     | . GEQ

    LEQ  shift, and go to state 42
    GEQ  shift, and go to state 43
    EQ   shift, and go to state 44
    NEQ  shift, and go to state 45
    '<'  shift, and go to state 46
    '>'  shift, and go to state 47

    $default  reduce using rule 10 (and_term)

    comp  go to state 48


State 23

   12 comp_term: add_term .

    $default  reduce using rule 12 (comp_term)


State 24

   20 add_term: mult_term .  [THEN, LEQ, GEQ, EQ, NEQ, OR, AND, NEWLINE, '.', ',', '<', '>', ')']
   21         | mult_term . '+' add_term
   22         | mult_term . '-' add_term

    '+'  shift, and go to state 49
    '-'  shift, and go to state 50

    $default  reduce using rule 20 (add_term)


State 25

   23 mult_term: unary_term .  [THEN, LEQ, GEQ, EQ, NEQ, OR, AND, NEWLINE, '.', ',', '<', '>', '+', '-', ')']
   24          | unary_term . '*' mult_term
   25          | unary_term . '/' mult_term

    '*'  shift, and go to state 51
    '/'  shift, and go to state 52

    $default  reduce using rule 23 (mult_term)


State 26

   26 unary_term: invocation .  [THEN, LEQ, GEQ, EQ, NEQ, OR, AND, NEWLINE, '.', ',', '<', '>', '+', '-', '*', '/', ')']
   30 invocation: invocation . '(' term_list ')'

    '('  shift, and go to state 53

    $default  reduce using rule 26 (unary_term)


State 27

   29 invocation: primary .

    $default  reduce using rule 29 (invocation)


State 28

   38 primary: undef_var .

    $default  reduce using rule 38 (primary)


State 29

   39 undef_var: typename . var
   52 var: . ID

    ID  shift, and go to state 10

    var  go to state 54


State 30

   35 primary: literal .

    $default  reduce using rule 35 (primary)


State 31

    4 expr: var . '=' term term_end expr
   36 primary: var .  [LEQ, GEQ, EQ, NEQ, OR, AND, '.', '<', '>', '+', '-', '*', '/', '(']

    '='  shift, and go to state 55

    $default  reduce using rule 36 (primary)


State 32

    5 expr: IF term . THEN term term_end ELSE expr
    9 term: term . OR and_term

    THEN  shift, and go to state 56
    OR    shift, and go to state 39


State 33

   36 primary: var .

    $default  reduce using rule 36 (primary)


State 34

   28 unary_term: NOT unary_term .

    $default  reduce using rule 28 (unary_term)


State 35

   27 unary_term: '-' unary_term .

    $default  reduce using rule 27 (unary_term)


State 36

   37 primary: '(' expr . ')'

    ')'  shift, and go to state 57


State 37

    0 $accept: exprs $end .

    $default  accept


State 38

    2 exprs: exprs expr .

    $default  reduce using rule 2 (exprs)


State 39

    9 term: term OR . and_term
   10 and_term: . comp_term
   11         | . and_term AND comp_term
   12 comp_term: . add_term
   13          | . comp_term comp add_term
   20 add_term: . mult_term
   21         | . mult_term '+' add_term
   22         | . mult_term '-' add_term
   23 mult_term: . unary_term
   24          | . unary_term '*' mult_term
   25          | . unary_term '/' mult_term
   26 unary_term: . invocation
   27           | . '-' unary_term
   28           | . NOT unary_term
   29 invocation: . primary
   30           | . invocation '(' term_list ')'
   35 primary: . literal
   36        | . var
   37        | . '(' expr ')'
   38        | . undef_var
   39 undef_var: . typename var
   40 typename: . ANY
   41         | . INT
   42         | . FLOAT
   43         | . STRING
   44         | . ARRAY
   45         | . LIST
   46         | . TABLE
   47         | . TYPENAME
   48 literal: . INT_LITERAL
   49        | . FLOAT_LITERAL
   50        | . STRING_LITERAL
   51        | . CHAR_LITERAL
   52 var: . ID

    INT             shift, and go to state 1
    FLOAT           shift, and go to state 2
    STRING          shift, and go to state 3
    ARRAY           shift, and go to state 4
    TABLE           shift, and go to state 5
    ANY             shift, and go to state 7
    LIST            shift, and go to state 8
    NOT             shift, and go to state 9
    ID              shift, and go to state 10
    TYPENAME        shift, and go to state 11
    STRING_LITERAL  shift, and go to state 12
    FLOAT_LITERAL   shift, and go to state 13
    INT_LITERAL     shift, and go to state 14
    CHAR_LITERAL    shift, and go to state 15
    '-'             shift, and go to state 16
    '('             shift, and go to state 17

    and_term    go to state 58
    comp_term   go to state 22
    add_term    go to state 23
    mult_term   go to state 24
    unary_term  go to state 25
    invocation  go to state 26
    primary     go to state 27
    undef_var   go to state 28
    typename    go to state 29
    literal     go to state 30
    var         go to state 33


State 40

    3 expr: term '.' .

    $default  reduce using rule 3 (expr)


State 41

   11 and_term: and_term AND . comp_term
   12 comp_term: . add_term
   13          | . comp_term comp add_term
   20 add_term: . mult_term
   21         | . mult_term '+' add_term
   22         | . mult_term '-' add_term
   23 mult_term: . unary_term
   24          | . unary_term '*' mult_term
   25          | . unary_term '/' mult_term
   26 unary_term: . invocation
   27           | . '-' unary_term
   28           | . NOT unary_term
   29 invocation: . primary
   30           | . invocation '(' term_list ')'
   35 primary: . literal
   36        | . var
   37        | . '(' expr ')'
   38        | . undef_var
   39 undef_var: . typename var
   40 typename: . ANY
   41         | . INT
   42         | . FLOAT
   43         | . STRING
   44         | . ARRAY
   45         | . LIST
   46         | . TABLE
   47         | . TYPENAME
   48 literal: . INT_LITERAL
   49        | . FLOAT_LITERAL
   50        | . STRING_LITERAL
   51        | . CHAR_LITERAL
   52 var: . ID

    INT             shift, and go to state 1
    FLOAT           shift, and go to state 2
    STRING          shift, and go to state 3
    ARRAY           shift, and go to state 4
    TABLE           shift, and go to state 5
    ANY             shift, and go to state 7
    LIST            shift, and go to state 8
    NOT             shift, and go to state 9
    ID              shift, and go to state 10
    TYPENAME        shift, and go to state 11
    STRING_LITERAL  shift, and go to state 12
    FLOAT_LITERAL   shift, and go to state 13
    INT_LITERAL     shift, and go to state 14
    CHAR_LITERAL    shift, and go to state 15
    '-'             shift, and go to state 16
    '('             shift, and go to state 17

    comp_term   go to state 59
    add_term    go to state 23
    mult_term   go to state 24
    unary_term  go to state 25
    invocation  go to state 26
    primary     go to state 27
    undef_var   go to state 28
    typename    go to state 29
    literal     go to state 30
    var         go to state 33


State 42

   17 comp: LEQ .

    $default  reduce using rule 17 (comp)


State 43

   19 comp: GEQ .

    $default  reduce using rule 19 (comp)


State 44

   14 comp: EQ .

    $default  reduce using rule 14 (comp)


State 45

   18 comp: NEQ .

    $default  reduce using rule 18 (comp)


State 46

   15 comp: '<' .

    $default  reduce using rule 15 (comp)


State 47

   16 comp: '>' .

    $default  reduce using rule 16 (comp)


State 48

   13 comp_term: comp_term comp . add_term
   20 add_term: . mult_term
   21         | . mult_term '+' add_term
   22         | . mult_term '-' add_term
   23 mult_term: . unary_term
   24          | . unary_term '*' mult_term
   25          | . unary_term '/' mult_term
   26 unary_term: . invocation
   27           | . '-' unary_term
   28           | . NOT unary_term
   29 invocation: . primary
   30           | . invocation '(' term_list ')'
   35 primary: . literal
   36        | . var
   37        | . '(' expr ')'
   38        | . undef_var
   39 undef_var: . typename var
   40 typename: . ANY
   41         | . INT
   42         | . FLOAT
   43         | . STRING
   44         | . ARRAY
   45         | . LIST
   46         | . TABLE
   47         | . TYPENAME
   48 literal: . INT_LITERAL
   49        | . FLOAT_LITERAL
   50        | . STRING_LITERAL
   51        | . CHAR_LITERAL
   52 var: . ID

    INT             shift, and go to state 1
    FLOAT           shift, and go to state 2
    STRING          shift, and go to state 3
    ARRAY           shift, and go to state 4
    TABLE           shift, and go to state 5
    ANY             shift, and go to state 7
    LIST            shift, and go to state 8
    NOT             shift, and go to state 9
    ID              shift, and go to state 10
    TYPENAME        shift, and go to state 11
    STRING_LITERAL  shift, and go to state 12
    FLOAT_LITERAL   shift, and go to state 13
    INT_LITERAL     shift, and go to state 14
    CHAR_LITERAL    shift, and go to state 15
    '-'             shift, and go to state 16
    '('             shift, and go to state 17

    add_term    go to state 60
    mult_term   go to state 24
    unary_term  go to state 25
    invocation  go to state 26
    primary     go to state 27
    undef_var   go to state 28
    typename    go to state 29
    literal     go to state 30
    var         go to state 33


State 49

   20 add_term: . mult_term
   21         | . mult_term '+' add_term
   21         | mult_term '+' . add_term
   22         | . mult_term '-' add_term
   23 mult_term: . unary_term
   24          | . unary_term '*' mult_term
   25          | . unary_term '/' mult_term
   26 unary_term: . invocation
   27           | . '-' unary_term
   28           | . NOT unary_term
   29 invocation: . primary
   30           | . invocation '(' term_list ')'
   35 primary: . literal
   36        | . var
   37        | . '(' expr ')'
   38        | . undef_var
   39 undef_var: . typename var
   40 typename: . ANY
   41         | . INT
   42         | . FLOAT
   43         | . STRING
   44         | . ARRAY
   45         | . LIST
   46         | . TABLE
   47         | . TYPENAME
   48 literal: . INT_LITERAL
   49        | . FLOAT_LITERAL
   50        | . STRING_LITERAL
   51        | . CHAR_LITERAL
   52 var: . ID

    INT             shift, and go to state 1
    FLOAT           shift, and go to state 2
    STRING          shift, and go to state 3
    ARRAY           shift, and go to state 4
    TABLE           shift, and go to state 5
    ANY             shift, and go to state 7
    LIST            shift, and go to state 8
    NOT             shift, and go to state 9
    ID              shift, and go to state 10
    TYPENAME        shift, and go to state 11
    STRING_LITERAL  shift, and go to state 12
    FLOAT_LITERAL   shift, and go to state 13
    INT_LITERAL     shift, and go to state 14
    CHAR_LITERAL    shift, and go to state 15
    '-'             shift, and go to state 16
    '('             shift, and go to state 17

    add_term    go to state 61
    mult_term   go to state 24
    unary_term  go to state 25
    invocation  go to state 26
    primary     go to state 27
    undef_var   go to state 28
    typename    go to state 29
    literal     go to state 30
    var         go to state 33


State 50

   20 add_term: . mult_term
   21         | . mult_term '+' add_term
   22         | . mult_term '-' add_term
   22         | mult_term '-' . add_term
   23 mult_term: . unary_term
   24          | . unary_term '*' mult_term
   25          | . unary_term '/' mult_term
   26 unary_term: . invocation
   27           | . '-' unary_term
   28           | . NOT unary_term
   29 invocation: . primary
   30           | . invocation '(' term_list ')'
   35 primary: . literal
   36        | . var
   37        | . '(' expr ')'
   38        | . undef_var
   39 undef_var: . typename var
   40 typename: . ANY
   41         | . INT
   42         | . FLOAT
   43         | . STRING
   44         | . ARRAY
   45         | . LIST
   46         | . TABLE
   47         | . TYPENAME
   48 literal: . INT_LITERAL
   49        | . FLOAT_LITERAL
   50        | . STRING_LITERAL
   51        | . CHAR_LITERAL
   52 var: . ID

    INT             shift, and go to state 1
    FLOAT           shift, and go to state 2
    STRING          shift, and go to state 3
    ARRAY           shift, and go to state 4
    TABLE           shift, and go to state 5
    ANY             shift, and go to state 7
    LIST            shift, and go to state 8
    NOT             shift, and go to state 9
    ID              shift, and go to state 10
    TYPENAME        shift, and go to state 11
    STRING_LITERAL  shift, and go to state 12
    FLOAT_LITERAL   shift, and go to state 13
    INT_LITERAL     shift, and go to state 14
    CHAR_LITERAL    shift, and go to state 15
    '-'             shift, and go to state 16
    '('             shift, and go to state 17

    add_term    go to state 62
    mult_term   go to state 24
    unary_term  go to state 25
    invocation  go to state 26
    primary     go to state 27
    undef_var   go to state 28
    typename    go to state 29
    literal     go to state 30
    var         go to state 33


State 51

   23 mult_term: . unary_term
   24          | . unary_term '*' mult_term
   24          | unary_term '*' . mult_term
   25          | . unary_term '/' mult_term
   26 unary_term: . invocation
   27           | . '-' unary_term
   28           | . NOT unary_term
   29 invocation: . primary
   30           | . invocation '(' term_list ')'
   35 primary: . literal
   36        | . var
   37        | . '(' expr ')'
   38        | . undef_var
   39 undef_var: . typename var
   40 typename: . ANY
   41         | . INT
   42         | . FLOAT
   43         | . STRING
   44         | . ARRAY
   45         | . LIST
   46         | . TABLE
   47         | . TYPENAME
   48 literal: . INT_LITERAL
   49        | . FLOAT_LITERAL
   50        | . STRING_LITERAL
   51        | . CHAR_LITERAL
   52 var: . ID

    INT             shift, and go to state 1
    FLOAT           shift, and go to state 2
    STRING          shift, and go to state 3
    ARRAY           shift, and go to state 4
    TABLE           shift, and go to state 5
    ANY             shift, and go to state 7
    LIST            shift, and go to state 8
    NOT             shift, and go to state 9
    ID              shift, and go to state 10
    TYPENAME        shift, and go to state 11
    STRING_LITERAL  shift, and go to state 12
    FLOAT_LITERAL   shift, and go to state 13
    INT_LITERAL     shift, and go to state 14
    CHAR_LITERAL    shift, and go to state 15
    '-'             shift, and go to state 16
    '('             shift, and go to state 17

    mult_term   go to state 63
    unary_term  go to state 25
    invocation  go to state 26
    primary     go to state 27
    undef_var   go to state 28
    typename    go to state 29
    literal     go to state 30
    var         go to state 33


State 52

   23 mult_term: . unary_term
   24          | . unary_term '*' mult_term
   25          | . unary_term '/' mult_term
   25          | unary_term '/' . mult_term
   26 unary_term: . invocation
   27           | . '-' unary_term
   28           | . NOT unary_term
   29 invocation: . primary
   30           | . invocation '(' term_list ')'
   35 primary: . literal
   36        | . var
   37        | . '(' expr ')'
   38        | . undef_var
   39 undef_var: . typename var
   40 typename: . ANY
   41         | . INT
   42         | . FLOAT
   43         | . STRING
   44         | . ARRAY
   45         | . LIST
   46         | . TABLE
   47         | . TYPENAME
   48 literal: . INT_LITERAL
   49        | . FLOAT_LITERAL
   50        | . STRING_LITERAL
   51        | . CHAR_LITERAL
   52 var: . ID

    INT             shift, and go to state 1
    FLOAT           shift, and go to state 2
    STRING          shift, and go to state 3
    ARRAY           shift, and go to state 4
    TABLE           shift, and go to state 5
    ANY             shift, and go to state 7
    LIST            shift, and go to state 8
    NOT             shift, and go to state 9
    ID              shift, and go to state 10
    TYPENAME        shift, and go to state 11
    STRING_LITERAL  shift, and go to state 12
    FLOAT_LITERAL   shift, and go to state 13
    INT_LITERAL     shift, and go to state 14
    CHAR_LITERAL    shift, and go to state 15
    '-'             shift, and go to state 16
    '('             shift, and go to state 17

    mult_term   go to state 64
    unary_term  go to state 25
    invocation  go to state 26
    primary     go to state 27
    undef_var   go to state 28
    typename    go to state 29
    literal     go to state 30
    var         go to state 33


State 53

    8 term: . and_term
    9     | . term OR and_term
   10 and_term: . comp_term
   11         | . and_term AND comp_term
   12 comp_term: . add_term
   13          | . comp_term comp add_term
   20 add_term: . mult_term
   21         | . mult_term '+' add_term
   22         | . mult_term '-' add_term
   23 mult_term: . unary_term
   24          | . unary_term '*' mult_term
   25          | . unary_term '/' mult_term
   26 unary_term: . invocation
   27           | . '-' unary_term
   28           | . NOT unary_term
   29 invocation: . primary
   30           | . invocation '(' term_list ')'
   30           | invocation '(' . term_list ')'
   31 term_list: . opt_term
   32          | . term_list ',' opt_term
   33 opt_term: . term
   34         | .  [',', ')']
   35 primary: . literal
   36        | . var
   37        | . '(' expr ')'
   38        | . undef_var
   39 undef_var: . typename var
   40 typename: . ANY
   41         | . INT
   42         | . FLOAT
   43         | . STRING
   44         | . ARRAY
   45         | . LIST
   46         | . TABLE
   47         | . TYPENAME
   48 literal: . INT_LITERAL
   49        | . FLOAT_LITERAL
   50        | . STRING_LITERAL
   51        | . CHAR_LITERAL
   52 var: . ID

    INT             shift, and go to state 1
    FLOAT           shift, and go to state 2
    STRING          shift, and go to state 3
    ARRAY           shift, and go to state 4
    TABLE           shift, and go to state 5
    ANY             shift, and go to state 7
    LIST            shift, and go to state 8
    NOT             shift, and go to state 9
    ID              shift, and go to state 10
    TYPENAME        shift, and go to state 11
    STRING_LITERAL  shift, and go to state 12
    FLOAT_LITERAL   shift, and go to state 13
    INT_LITERAL     shift, and go to state 14
    CHAR_LITERAL    shift, and go to state 15
    '-'             shift, and go to state 16
    '('             shift, and go to state 17

    $default  reduce using rule 34 (opt_term)

    term        go to state 65
    and_term    go to state 21
    comp_term   go to state 22
    add_term    go to state 23
    mult_term   go to state 24
    unary_term  go to state 25
    invocation  go to state 26
    term_list   go to state 66
    opt_term    go to state 67
    primary     go to state 27
    undef_var   go to state 28
    typename    go to state 29
    literal     go to state 30
    var         go to state 33


State 54

   39 undef_var: typename var .

    $default  reduce using rule 39 (undef_var)


State 55

    4 expr: var '=' . term term_end expr
    8 term: . and_term
    9     | . term OR and_term
   10 and_term: . comp_term
   11         | . and_term AND comp_term
   12 comp_term: . add_term
   13          | . comp_term comp add_term
   20 add_term: . mult_term
   21         | . mult_term '+' add_term
   22         | . mult_term '-' add_term
   23 mult_term: . unary_term
   24          | . unary_term '*' mult_term
   25          | . unary_term '/' mult_term
   26 unary_term: . invocation
   27           | . '-' unary_term
   28           | . NOT unary_term
   29 invocation: . primary
   30           | . invocation '(' term_list ')'
   35 primary: . literal
   36        | . var
   37        | . '(' expr ')'
   38        | . undef_var
   39 undef_var: . typename var
   40 typename: . ANY
   41         | . INT
   42         | . FLOAT
   43         | . STRING
   44         | . ARRAY
   45         | . LIST
   46         | . TABLE
   47         | . TYPENAME
   48 literal: . INT_LITERAL
   49        | . FLOAT_LITERAL
   50        | . STRING_LITERAL
   51        | . CHAR_LITERAL
   52 var: . ID

    INT             shift, and go to state 1
    FLOAT           shift, and go to state 2
    STRING          shift, and go to state 3
    ARRAY           shift, and go to state 4
    TABLE           shift, and go to state 5
    ANY             shift, and go to state 7
    LIST            shift, and go to state 8
    NOT             shift, and go to state 9
    ID              shift, and go to state 10
    TYPENAME        shift, and go to state 11
    STRING_LITERAL  shift, and go to state 12
    FLOAT_LITERAL   shift, and go to state 13
    INT_LITERAL     shift, and go to state 14
    CHAR_LITERAL    shift, and go to state 15
    '-'             shift, and go to state 16
    '('             shift, and go to state 17

    term        go to state 68
    and_term    go to state 21
    comp_term   go to state 22
    add_term    go to state 23
    mult_term   go to state 24
    unary_term  go to state 25
    invocation  go to state 26
    primary     go to state 27
    undef_var   go to state 28
    typename    go to state 29
    literal     go to state 30
    var         go to state 33


State 56

    5 expr: IF term THEN . term term_end ELSE expr
    8 term: . and_term
    9     | . term OR and_term
   10 and_term: . comp_term
   11         | . and_term AND comp_term
   12 comp_term: . add_term
   13          | . comp_term comp add_term
   20 add_term: . mult_term
   21         | . mult_term '+' add_term
   22         | . mult_term '-' add_term
   23 mult_term: . unary_term
   24          | . unary_term '*' mult_term
   25          | . unary_term '/' mult_term
   26 unary_term: . invocation
   27           | . '-' unary_term
   28           | . NOT unary_term
   29 invocation: . primary
   30           | . invocation '(' term_list ')'
   35 primary: . literal
   36        | . var
   37        | . '(' expr ')'
   38        | . undef_var
   39 undef_var: . typename var
   40 typename: . ANY
   41         | . INT
   42         | . FLOAT
   43         | . STRING
   44         | . ARRAY
   45         | . LIST
   46         | . TABLE
   47         | . TYPENAME
   48 literal: . INT_LITERAL
   49        | . FLOAT_LITERAL
   50        | . STRING_LITERAL
   51        | . CHAR_LITERAL
   52 var: . ID

    INT             shift, and go to state 1
    FLOAT           shift, and go to state 2
    STRING          shift, and go to state 3
    ARRAY           shift, and go to state 4
    TABLE           shift, and go to state 5
    ANY             shift, and go to state 7
    LIST            shift, and go to state 8
    NOT             shift, and go to state 9
    ID              shift, and go to state 10
    TYPENAME        shift, and go to state 11
    STRING_LITERAL  shift, and go to state 12
    FLOAT_LITERAL   shift, and go to state 13
    INT_LITERAL     shift, and go to state 14
    CHAR_LITERAL    shift, and go to state 15
    '-'             shift, and go to state 16
    '('             shift, and go to state 17

    term        go to state 69
    and_term    go to state 21
    comp_term   go to state 22
    add_term    go to state 23
    mult_term   go to state 24
    unary_term  go to state 25
    invocation  go to state 26
    primary     go to state 27
    undef_var   go to state 28
    typename    go to state 29
    literal     go to state 30
    var         go to state 33


State 57

   37 primary: '(' expr ')' .

    $default  reduce using rule 37 (primary)


State 58

    9 term: term OR and_term .  [THEN, OR, NEWLINE, '.', ',', ')']
   11 and_term: and_term . AND comp_term

    AND  shift, and go to state 41

    $default  reduce using rule 9 (term)


State 59

   11 and_term: and_term AND comp_term .  [THEN, OR, AND, NEWLINE, '.', ',', ')']
   13 comp_term: comp_term . comp add_term
   14 comp: . EQ
   15     | . '<'
   16     | . '>'
   17     | . LEQ
   18     | . NEQ
   19     | . GEQ

    LEQ  shift, and go to state 42
    GEQ  shift, and go to state 43
    EQ   shift, and go to state 44
    NEQ  shift, and go to state 45
    '<'  shift, and go to state 46
    '>'  shift, and go to state 47

    $default  reduce using rule 11 (and_term)

    comp  go to state 48


State 60

   13 comp_term: comp_term comp add_term .

    $default  reduce using rule 13 (comp_term)


State 61

   21 add_term: mult_term '+' add_term .

    $default  reduce using rule 21 (add_term)


State 62

   22 add_term: mult_term '-' add_term .

    $default  reduce using rule 22 (add_term)


State 63

   24 mult_term: unary_term '*' mult_term .

    $default  reduce using rule 24 (mult_term)


State 64

   25 mult_term: unary_term '/' mult_term .

    $default  reduce using rule 25 (mult_term)


State 65

    9 term: term . OR and_term
   33 opt_term: term .  [',', ')']

    OR  shift, and go to state 39

    $default  reduce using rule 33 (opt_term)


State 66

   30 invocation: invocation '(' term_list . ')'
   32 term_list: term_list . ',' opt_term

    ','  shift, and go to state 70
    ')'  shift, and go to state 71


State 67

   31 term_list: opt_term .

    $default  reduce using rule 31 (term_list)


State 68

    4 expr: var '=' term . term_end expr
    6 term_end: . NEWLINE
    7         | . ','
    9 term: term . OR and_term

    OR       shift, and go to state 39
    NEWLINE  shift, and go to state 72
    ','      shift, and go to state 73

    term_end  go to state 74


State 69

    5 expr: IF term THEN term . term_end ELSE expr
    6 term_end: . NEWLINE
    7         | . ','
    9 term: term . OR and_term

    OR       shift, and go to state 39
    NEWLINE  shift, and go to state 72
    ','      shift, and go to state 73

    term_end  go to state 75


State 70

    8 term: . and_term
    9     | . term OR and_term
   10 and_term: . comp_term
   11         | . and_term AND comp_term
   12 comp_term: . add_term
   13          | . comp_term comp add_term
   20 add_term: . mult_term
   21         | . mult_term '+' add_term
   22         | . mult_term '-' add_term
   23 mult_term: . unary_term
   24          | . unary_term '*' mult_term
   25          | . unary_term '/' mult_term
   26 unary_term: . invocation
   27           | . '-' unary_term
   28           | . NOT unary_term
   29 invocation: . primary
   30           | . invocation '(' term_list ')'
   32 term_list: term_list ',' . opt_term
   33 opt_term: . term
   34         | .  [',', ')']
   35 primary: . literal
   36        | . var
   37        | . '(' expr ')'
   38        | . undef_var
   39 undef_var: . typename var
   40 typename: . ANY
   41         | . INT
   42         | . FLOAT
   43         | . STRING
   44         | . ARRAY
   45         | . LIST
   46         | . TABLE
   47         | . TYPENAME
   48 literal: . INT_LITERAL
   49        | . FLOAT_LITERAL
   50        | . STRING_LITERAL
   51        | . CHAR_LITERAL
   52 var: . ID

    INT             shift, and go to state 1
    FLOAT           shift, and go to state 2
    STRING          shift, and go to state 3
    ARRAY           shift, and go to state 4
    TABLE           shift, and go to state 5
    ANY             shift, and go to state 7
    LIST            shift, and go to state 8
    NOT             shift, and go to state 9
    ID              shift, and go to state 10
    TYPENAME        shift, and go to state 11
    STRING_LITERAL  shift, and go to state 12
    FLOAT_LITERAL   shift, and go to state 13
    INT_LITERAL     shift, and go to state 14
    CHAR_LITERAL    shift, and go to state 15
    '-'             shift, and go to state 16
    '('             shift, and go to state 17

    $default  reduce using rule 34 (opt_term)

    term        go to state 65
    and_term    go to state 21
    comp_term   go to state 22
    add_term    go to state 23
    mult_term   go to state 24
    unary_term  go to state 25
    invocation  go to state 26
    opt_term    go to state 76
    primary     go to state 27
    undef_var   go to state 28
    typename    go to state 29
    literal     go to state 30
    var         go to state 33


State 71

   30 invocation: invocation '(' term_list ')' .

    $default  reduce using rule 30 (invocation)


State 72

    6 term_end: NEWLINE .

    $default  reduce using rule 6 (term_end)


State 73

    7 term_end: ',' .

    $default  reduce using rule 7 (term_end)


State 74

    3 expr: . term '.'
    4     | . var '=' term term_end expr
    4     | var '=' term term_end . expr
    5     | . IF term THEN term term_end ELSE expr
    8 term: . and_term
    9     | . term OR and_term
   10 and_term: . comp_term
   11         | . and_term AND comp_term
   12 comp_term: . add_term
   13          | . comp_term comp add_term
   20 add_term: . mult_term
   21         | . mult_term '+' add_term
   22         | . mult_term '-' add_term
   23 mult_term: . unary_term
   24          | . unary_term '*' mult_term
   25          | . unary_term '/' mult_term
   26 unary_term: . invocation
   27           | . '-' unary_term
   28           | . NOT unary_term
   29 invocation: . primary
   30           | . invocation '(' term_list ')'
   35 primary: . literal
   36        | . var
   37        | . '(' expr ')'
   38        | . undef_var
   39 undef_var: . typename var
   40 typename: . ANY
   41         | . INT
   42         | . FLOAT
   43         | . STRING
   44         | . ARRAY
   45         | . LIST
   46         | . TABLE
   47         | . TYPENAME
   48 literal: . INT_LITERAL
   49        | . FLOAT_LITERAL
   50        | . STRING_LITERAL
   51        | . CHAR_LITERAL
   52 var: . ID

    INT             shift, and go to state 1
    FLOAT           shift, and go to state 2
    STRING          shift, and go to state 3
    ARRAY           shift, and go to state 4
    TABLE           shift, and go to state 5
    IF              shift, and go to state 6
    ANY             shift, and go to state 7
    LIST            shift, and go to state 8
    NOT             shift, and go to state 9
    ID              shift, and go to state 10
    TYPENAME        shift, and go to state 11
    STRING_LITERAL  shift, and go to state 12
    FLOAT_LITERAL   shift, and go to state 13
    INT_LITERAL     shift, and go to state 14
    CHAR_LITERAL    shift, and go to state 15
    '-'             shift, and go to state 16
    '('             shift, and go to state 17

    expr        go to state 77
    term        go to state 20
    and_term    go to state 21
    comp_term   go to state 22
    add_term    go to state 23
    mult_term   go to state 24
    unary_term  go to state 25
    invocation  go to state 26
    primary     go to state 27
    undef_var   go to state 28
    typename    go to state 29
    literal     go to state 30
    var         go to state 31


State 75

    5 expr: IF term THEN term term_end . ELSE expr

    ELSE  shift, and go to state 78


State 76

   32 term_list: term_list ',' opt_term .

    $default  reduce using rule 32 (term_list)


State 77

    4 expr: var '=' term term_end expr .

    $default  reduce using rule 4 (expr)


State 78

    3 expr: . term '.'
    4     | . var '=' term term_end expr
    5     | . IF term THEN term term_end ELSE expr
    5     | IF term THEN term term_end ELSE . expr
    8 term: . and_term
    9     | . term OR and_term
   10 and_term: . comp_term
   11         | . and_term AND comp_term
   12 comp_term: . add_term
   13          | . comp_term comp add_term
   20 add_term: . mult_term
   21         | . mult_term '+' add_term
   22         | . mult_term '-' add_term
   23 mult_term: . unary_term
   24          | . unary_term '*' mult_term
   25          | . unary_term '/' mult_term
   26 unary_term: . invocation
   27           | . '-' unary_term
   28           | . NOT unary_term
   29 invocation: . primary
   30           | . invocation '(' term_list ')'
   35 primary: . literal
   36        | . var
   37        | . '(' expr ')'
   38        | . undef_var
   39 undef_var: . typename var
   40 typename: . ANY
   41         | . INT
   42         | . FLOAT
   43         | . STRING
   44         | . ARRAY
   45         | . LIST
   46         | . TABLE
   47         | . TYPENAME
   48 literal: . INT_LITERAL
   49        | . FLOAT_LITERAL
   50        | . STRING_LITERAL
   51        | . CHAR_LITERAL
   52 var: . ID

    INT             shift, and go to state 1
    FLOAT           shift, and go to state 2
    STRING          shift, and go to state 3
    ARRAY           shift, and go to state 4
    TABLE           shift, and go to state 5
    IF              shift, and go to state 6
    ANY             shift, and go to state 7
    LIST            shift, and go to state 8
    NOT             shift, and go to state 9
    ID              shift, and go to state 10
    TYPENAME        shift, and go to state 11
    STRING_LITERAL  shift, and go to state 12
    FLOAT_LITERAL   shift, and go to state 13
    INT_LITERAL     shift, and go to state 14
    CHAR_LITERAL    shift, and go to state 15
    '-'             shift, and go to state 16
    '('             shift, and go to state 17

    expr        go to state 79
    term        go to state 20
    and_term    go to state 21
    comp_term   go to state 22
    add_term    go to state 23
    mult_term   go to state 24
    unary_term  go to state 25
    invocation  go to state 26
    primary     go to state 27
    undef_var   go to state 28
    typename    go to state 29
    literal     go to state 30
    var         go to state 31


State 79

    5 expr: IF term THEN term term_end ELSE expr .

    $default  reduce using rule 5 (expr)
